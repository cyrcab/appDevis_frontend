{"version":3,"sources":["helpers/api/axios.config.js","helpers/Alert/errorAlert.js","context/AuthContext.js","context/UserContext.js","context/AxiosContext.js","screens/admin/Login.js","screens/admin/ResetPass.js","helpers/LoginStackScreen.js","components/styled-components/buttons/AddButton.js","components/styled-components/buttons/DuoButton.js","components/option/OptionRender.js","components/option/OptionList.js","components/pack/PackRender.js","components/pack/PackList.js","components/styled-components/buttons/FormChoice.js","components/estimate/EstimateForm.js","components/styled-components/buttons/EstimateButton.js","screens/admin/estimates/EstimateCreation.js","components/estimate/EstimatesInfos.js","components/estimate/RenderEstimateInList.js","components/styled-components/SearchBar.js","screens/admin/estimates/EstimateList.js","components/parameters/RenderUsersInList.js","components/parameters/UserList.js","screens/admin/parameters/AccountListPage.js","components/account/AccountInfos.js","components/account/ItemInfos.js","components/parameters/ParameterList.js","components/styled-components/buttons/DeleteButton.js","app/datas/accountParametersList.js","screens/admin/parameters/AccountAdminView.js","components/styled-components/buttons/FirstButton.js","screens/admin/Account/UpdateMail.js","screens/admin/Account/UpdatePassword.js","components/user/UserCreation.js","screens/admin/Account/CreateAccount.js","components/fastActionHome/FastAction.js","components/fastActionHome/FastActionList.js","screens/admin/Home.js","screens/admin/Account/Account.js","helpers/AccountStackScreen.js","components/styled-components/buttons/LogoutButton.js","app/datas/parametersList.js","screens/admin/parameters/Parameters.js","helpers/ParametersStackScreen.js","components/navBar/BottomNavbar.js","AppContainer.js","App.js"],"names":["axios","axiosDefault","create","baseURL","withCredentials","displayAlertError","error","Alert","alert","text","onPress","style","AuthContext","createContext","Provider","AuthProvider","children","useState","accessToken","refreshToken","authenticated","authState","setAuthState","value","logout","a","async","post","status","getAccessToken","UserContext","UserProvider","id","firstName","lastName","mail","role_id","user","setUser","AxiosContext","AxiosProvider","authContext","useContext","authAxios","publicAxios","interceptors","request","use","config","headers","Authorization","Promise","reject","createAuthRefreshInterceptor","failedRequest","options","method","data","url","then","tokenRefreshResponse","response","AsyncStorage","setItem","JSON","stringify","resolve","catch","e","styles","StyleSheet","main","flex","backgroundColor","header","padding","title","fontSize","textAlign","marginVertical","textInput","marginBottom","fontWeight","input","borderWidth","borderColor","borderRadius","mdpInput","marginTop","inputContainer","paddingHorizontal","resetPass","button","buttonContainer","textButton","color","errorText","Login","navigation","setMail","password","setPassword","errors","setErrors","SafeAreaView","StatusBar","barStyle","View","Text","TextInput","onChangeText","autoCapitalize","clearButtonMode","textContentType","keyboardType","length","some","errorCode","filter","el","message","secureTextEntry","inputBottom","TouchableOpacity","navigate","concat","connection","justifyContent","buttonText","buttonContaier","textValidation","ResetPass","emailToReset","setEmailToReset","isMailSend","setIsMailSend","LoginStack","createNativeStackNavigator","LoginStackScreen","Navigator","screenOptions","headerShown","headerStyle","headerTintColor","Screen","name","component","Button","styled","ButtonText","AddButton","action","size","Main","LeftButton","TextLeft","RightButton","props","isClickable","TextRight","DuoButton","textLeft","textRight","actionLeft","actionRight","righIsClickable","activeOpacity","CrossContainer","InputName","InputPrice","PriceWrapper","PriceContainer","OptionRender","option","setOptionList","optionList","setAddButtonIsPressed","packId","content","price_ht","price_ttc","user_id","pack_id","newOption","setNewOption","delete","res","optionDeleted","placeholder","put","parseFloat","optionUpdated","err","console","Title","ListContainer","OptionList","pack","addButtonIsPressed","useEffect","get","map","Header","TitleContainer","TrashContainer","OptionContainer","PackRender","setList","list","isVisible","setIsVisible","packDeleted","Input","ButtonContainer","BoxConfirm","PackList","packName","setPackName","newPack","isActive","FormChoice","leftIsActive","setLeftIsActive","rightIsActive","setRightIsActive","isFocus","EstimateInfos","InputContainer","Label","DisplayInfos","IconContainer","EstimateForm","formStyle","customer","setCustomer","setInput","setIsFocus","isOpen","setIsOpen","firstname","lastname","phone","company","Object","entries","key","onFocus","onEndEditing","isActif","EstimateButton","ScrollView","ContentWrapper","FormContainer","ButtonWrapper","AnswerListWrapper","TitleList","ActionButton","FileCreation","route","formToDisplay","setFormToDisplay","generateButton","setGenerateButton","packList","setPackList","type","params","file","reduction","connect","setFile","displayButtons","setDisplayButtons","setAction","fileToUpdate","obj","parse","log","newCustomer","customer_id","price","ChevronContainer","InfosContainer","TextTitle","DeleteButtonContainer","Body","EstimatesInfos","estimateList","setEstimateList","useNavigation","fileInfoOpen","setFileInfoOpen","deletedFile","WebBrowser","RenderEstimateInList","i","InputSearch","SearchBar","setValue","NavigationText","NoEstimateContainer","ButtonToNavigate","TextContainer","SearchContainer","FilterContainer","EstimateList","refreshing","setRefreshing","searchedWord","setSearchedWord","fetchData","useCallback","estimate","includes","toLowerCase","toUpperCase","onRefresh","refreshControl","RefreshControl","IconWrapper","InfoName","EstimateNumber","Role","InfosSection","Params","RenderUsersInList","iconName","Name","_count","Estimate","push","ListWrapper","InfosText","UserList","elems","undefined","FlatList","renderItem","item","keyExtractor","horizontal","SearchBarWrapper","AccountListPage","userList","setUserList","InfoContainer","TextName","AccountInfos","roleName","nameToDisplay","Content","TouchableWrapper","ItemInfos","link","autorisedRole","ParameterList","parameters","DeleteButton","PARAMETERS","AccountAdminView","colorActive","colorInactive","FirstButton","UpdateMail","isCorrect","isEnterMail","setIsEnterMail","newMail","setNewMail","newMailConfirmation","setNewMailConfirmation","isFocused","setIsFocused","marginForFocusedInput","areTheSame","setAreTheSame","editable","UpdatePassword","isEnterPass","setIsEnterPass","newPassword","setNewPassword","newPasswordConfirmation","setNewPasswordConfirmation","TitleWrapper","SelectWrapper","UserCreation","newUser","setNewUser","autoCorrect","placeholderTextColor","numberOfLines","selectedValue","onValueChange","itemValue","itemIndex","Item","label","KeyboardAvoidingView","CreateAccount","setIsClickable","behavior","Platform","OS","MainContainer","FastAction","logo","FastActionList","HomeContainer","FastActionContainer","Subtitle","Home","Account","AccountStack","AccountStackScreen","LogoutButton","Paramaters","ParamatersStack","ParametersStackScreen","Parameters","Tab","createBottomTabNavigator","BottomNavbar","tabBarIcon","Accueil","Notifications","Compte","Param√®tres","tabBarActiveTintColor","tabBarStyle","paddingTop","tabBarInactiveTintColor","tabBarLabel","Stack","AppContainer","getItem","jwt","checkConnection","NavigationContainer","BottomNavBar","EstimateCreation","App"],"mappings":"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","file":"static/js/app.4895db9c.chunk.js","sourcesContent":["import axiosDefault from 'axios';\nimport { API_URL } from '@env';\n\nconst axios = axiosDefault.create({\n  baseURL: 'https://app-devis-test.herokuapp.com/',\n  withCredentials: true,\n});\n\nexport default axios;\n","import { Alert, Platform } from 'react-native';\n\nconst displayAlertError = (error) => {\n  // if (Platform.OS !== 'android' || Platform.OS !== 'ios') {\n  //   console.log('web');\n  // }\n\n  return Alert.alert(\n    'Une erreur est survenue',\n    `Une erreur de type ${error}, l'action a √©t√© annul√©e`,\n    [\n      {\n        text: 'Ok',\n        onPress: () => {},\n        style: 'cancel',\n      },\n    ],\n  );\n};\n\nexport default displayAlertError;\n","import React, { createContext, useState } from 'react';\nimport axios from '../helpers/api/axios.config';\nimport displayAlertError from '../helpers/Alert/errorAlert';\n\nconst AuthContext = createContext(null);\nconst { Provider } = AuthContext;\n\nconst AuthProvider = ({ children }) => {\n  const [authState, setAuthState] = useState({\n    accessToken: null,\n    refreshToken: null,\n    authenticated: null,\n  });\n\n  const logout = async () => {\n    try {\n      const response = await axios.post('/signout');\n\n      if (response.status === 200) {\n        setAuthState({\n          accessToken: null,\n          refreshToken: null,\n          authenticated: false,\n        });\n      }\n    } catch (error) {\n      displayAlertError(error);\n    }\n  };\n\n  const getAccessToken = () => {\n    return authState.accessToken;\n  };\n\n  return (\n    <Provider value={{ authState, setAuthState, logout, getAccessToken }}>\n      {children}\n    </Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n","import React, { createContext, useState } from 'react';\n\nconst UserContext = createContext();\nconst { Provider } = UserContext;\n\nconst UserProvider = ({ children }) => {\n  const [user, setUser] = useState({\n    id: null,\n    firstName: null,\n    lastName: null,\n    mail: null,\n    role_id: null,\n  });\n\n  return <Provider value={{ user, setUser }}>{children}</Provider>;\n};\n\nexport { UserContext, UserProvider };\n","import React, { createContext, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from './AuthContext';\nimport createAuthRefreshInterceptor from 'axios-auth-refresh';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst AxiosContext = createContext();\n\nconst { Provider } = AxiosContext;\n\nconst AxiosProvider = ({ children }) => {\n  const authContext = useContext(AuthContext);\n\n  const authAxios = axios.create({\n    baseURL: 'http://192.168.1.10:5001',\n  });\n\n  const publicAxios = axios.create({\n    baseURL: 'http://192.168.1.10:5001',\n  });\n\n  authAxios.interceptors.request.use(\n    (config) => {\n      if (!config.headers.Authorization) {\n        config.headers.Authorization = `Bearer ${authContext.getAccessToken()}`;\n      }\n\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    },\n  );\n\n  const refreshAuthLogic = (failedRequest) => {\n    const data = {\n      refreshToken: authContext.authState.refreshToken,\n    };\n\n    const options = {\n      method: 'POST',\n      data,\n      url: 'http://192.168.1.10:5001/refresh-token',\n    };\n\n    return axios(options)\n      .then(async (tokenRefreshResponse) => {\n        failedRequest.response.config.headers.Authorization =\n          'Bearer ' + tokenRefreshResponse.data.accessToken;\n\n        authContext.setAuthState({\n          ...authContext.authState,\n          accessToken: tokenRefreshResponse.data.accessToken,\n        });\n\n        await AsyncStorage.setItem(\n          '@storage_Key',\n          JSON.stringify({\n            accessToken: tokenRefreshResponse.data.accessToken,\n            refreshToken: authContext.authState.refreshToken,\n          }),\n        );\n\n        return Promise.resolve();\n      })\n      .catch((e) =>\n        authContext.setAuthState({\n          accessToken: null,\n          refreshToken: null,\n        }),\n      );\n  };\n\n  createAuthRefreshInterceptor(authAxios, refreshAuthLogic, {});\n\n  return <Provider value={(authAxios, publicAxios)}>{children}</Provider>;\n};\n\nexport { AxiosContext, AxiosProvider };\n","import React, { useState, useContext } from 'react';\nimport { AuthContext } from '../../../appDevis_frontend/context/AuthContext';\nimport { UserContext } from '../../context/UserContext';\nimport { AxiosContext } from '../../context/AxiosContext';\nimport displayAlertError from '../../helpers/Alert/errorAlert';\n\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n  StatusBar,\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Login = ({ navigation }) => {\n  const [mail, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  const { setAuthState } = useContext(AuthContext);\n  const { user, setUser } = useContext(UserContext);\n  const { publicAxios } = useContext(AxiosContext);\n\n  const handleLoginUser = async () => {\n    try {\n      if (!mail) {\n        setErrors(\n          errors.concat({\n            errorCode: 2,\n            message: 'Merci de rentrer une adresse mail',\n          }),\n        );\n      }\n      if (!password) {\n        setErrors(\n          errors.concat({\n            errorCode: 3,\n            message: 'Merci de rentrer un mot de passe',\n          }),\n        );\n      }\n\n      const connection = await publicAxios.post('/signin', {\n        mail: mail,\n        password: password,\n      });\n\n      if (!connection) {\n        displayAlertError(\n          'Une erreur est survenue durant la connexion, merci de r√©essayer',\n        );\n      }\n\n      const { accessToken, refreshToken } = connection.data;\n\n      // setUser({ ...user, ...connection.data.user });\n      // setAuthState({\n      //   accessToken,\n      //   refreshToken,\n      //   authenticated: true,\n      // });\n\n      await AsyncStorage.setItem(\n        '@storage_Key',\n        JSON.stringify({\n          accessToken,\n          refreshToken,\n        }),\n      );\n    } catch (error) {\n      setAuthState({ authenticated: false });\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.main}>\n      <StatusBar barStyle=\"dark-content\" />\n      <View style={styles.header}>\n        <Text style={styles.title}>\n          Bonjour, Bienvenue sur l‚Äôapplication devis de Webgo\n        </Text>\n      </View>\n      <View style={styles.inputContainer}>\n        <Text style={styles.textInput}>Adresse mail</Text>\n        <TextInput\n          onChangeText={setMail}\n          value={mail}\n          autoCapitalize=\"none\"\n          clearButtonMode=\"while-editing\"\n          style={styles.input}\n          textContentType=\"emailAddress\"\n          keyboardType=\"email-address\"\n        />\n        {errors.length > 0 && errors.some((e) => e.errorCode === 2) ? (\n          <Text style={styles.errorText}>\n            {errors.filter((el) => el.errorCode === 2)[0].message}\n          </Text>\n        ) : null}\n      </View>\n      <View style={[styles.inputContainer, styles.mdpInput]}>\n        <Text style={styles.textInput}>Mot de passe</Text>\n        <TextInput\n          onChangeText={setPassword}\n          value={password}\n          textContentType=\"password\"\n          secureTextEntry={true}\n          clearButtonMode=\"while-editing\"\n          style={[styles.input, styles.inputBottom]}\n        />\n        {errors.length > 0 && errors.some((e) => e.errorCode === 3) ? (\n          <Text style={styles.errorText}>\n            {errors.filter((el) => el.errorCode === 3)[0].message}\n          </Text>\n        ) : null}\n      </View>\n      <TouchableOpacity onPress={() => navigation.navigate('Reset Password')}>\n        <Text style={styles.resetPass}>Mot de passe oubli√© ?</Text>\n      </TouchableOpacity>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity style={styles.button} onPress={handleLoginUser}>\n          <Text style={styles.textButton}>Connexion</Text>\n        </TouchableOpacity>\n        {errors.length > 0 &&\n        errors.some((e) => e.errorCode !== 2 && e.errorCode !== 3) ? (\n          <Text style={styles.errorText}>{errors[0].message}</Text>\n        ) : null}\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: '#EEEFF5',\n  },\n  header: {\n    padding: 30,\n  },\n  title: {\n    fontSize: 30,\n    textAlign: 'center',\n    marginVertical: 50,\n  },\n\n  // style des inputs\n  textInput: {\n    fontSize: 18,\n    marginBottom: 10,\n    fontWeight: '600',\n  },\n  input: {\n    padding: 10,\n    fontSize: 20,\n    borderWidth: 2,\n    borderColor: 'black',\n    backgroundColor: 'white',\n    borderRadius: 10,\n  },\n  mdpInput: {\n    marginTop: 20,\n  },\n  inputContainer: {\n    paddingHorizontal: 30,\n  },\n\n  resetPass: {\n    textAlign: 'center',\n    marginVertical: 10,\n    fontWeight: '700',\n  },\n\n  // style du button\n  button: {\n    marginTop: 30,\n    backgroundColor: '#083D77',\n    borderRadius: 50,\n  },\n  buttonContainer: {\n    paddingHorizontal: 80,\n  },\n  textButton: {\n    fontSize: 20,\n    color: 'white',\n    padding: 20,\n    textAlign: 'center',\n    fontWeight: '600',\n  },\n\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n  },\n});\n\nexport default Login;\n","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n} from 'react-native';\n\nconst ResetPass = () => {\n  const [emailToReset, setEmailToReset] = useState('');\n  const [isMailSend, setIsMailSend] = useState(false);\n\n  return (\n    <SafeAreaView style={styles.main}>\n      <View style={styles.inputContainer}>\n        <Text style={styles.textInput}>Rentrez votre mail ici : </Text>\n        <TextInput\n          value={emailToReset}\n          style={styles.input}\n          onChangeText={setEmailToReset}\n          textContentType=\"emailAddress\"\n        />\n      </View>\n      <View style={styles.buttonContaier}>\n        <TouchableOpacity onPress={() => setIsMailSend(true)}>\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>Envoyer</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n\n      {isMailSend ? (\n        <Text style={styles.textValidation}>\n          Un lien pour r√©initialiser votre mot de passe vous a √©t√© envoy√©\n        </Text>\n      ) : null}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#EEEFF5',\n  },\n\n  // input style\n  textInput: {\n    marginBottom: 10,\n    fontSize: 18,\n  },\n  input: {\n    borderColor: 'black',\n    borderWidth: 2,\n    marginBottom: 10,\n    fontSize: 30,\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 10,\n  },\n  inputContainer: {\n    paddingHorizontal: 30,\n  },\n\n  // style bouton pour reset le mot de passe\n  button: {\n    backgroundColor: '#083D77',\n    padding: 20,\n    borderRadius: 50,\n    marginTop: 20,\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'white',\n    textAlign: 'center',\n  },\n  buttonContaier: {\n    paddingHorizontal: 60,\n  },\n\n  // text validation\n  textValidation: {\n    textAlign: 'center',\n    marginTop: 20,\n    padding: 10,\n    color: 'green',\n  },\n});\n\nexport default ResetPass;\n","import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n// import des pages\nimport Login from '../screens/admin/Login';\nimport ResetPass from '../screens/admin/ResetPass';\n\nconst LoginStack = createNativeStackNavigator();\nconst LoginStackScreen = () => {\n  return (\n    <LoginStack.Navigator\n      screenOptions={{\n        headerShown: false,\n        headerStyle: {\n          backgroundColor: '#083D77',\n        },\n        headerTintColor: '#EFEFEF',\n      }}\n    >\n      <LoginStack.Screen name=\"Login\" component={Login} />\n      <LoginStack.Screen\n        name=\"Reset Password\"\n        component={ResetPass}\n        options={{\n          headerShown: true,\n        }}\n      />\n    </LoginStack.Navigator>\n  );\n};\n\nexport default LoginStackScreen;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport Icon from 'react-native-vector-icons/AntDesign';\n\nconst AddButton = ({ text, action }) => {\n  return (\n    <Button onPress={action}>\n      <ButtonText>{text}</ButtonText>\n      <Icon name=\"plus\" size={25} color=\"rgba(31, 19, 0, 0.6)\" />\n    </Button>\n  );\n};\n\nconst Button = styled.TouchableOpacity`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  border: 1px solid rgba(31, 19, 0, 0.3);\n  padding: 10px 20px;\n  background: #fdfdff;\n`;\nconst ButtonText = styled.Text`\n  font-size: 20px;\n  font-weight: 500;\n  color: rgba(31, 19, 0, 0.6);\n`;\n\nexport default AddButton;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\nconst DuoButton = ({\n  textLeft,\n  textRight,\n  actionLeft,\n  actionRight,\n  righIsClickable,\n}) => {\n  return (\n    <Main>\n      <LeftButton onPress={actionLeft}>\n        <TextLeft>{textLeft}</TextLeft>\n      </LeftButton>\n      <RightButton\n        onPress={actionRight}\n        isClickable={righIsClickable}\n        activeOpacity={righIsClickable ? 0.2 : 1}\n      >\n        <TextRight isClickable={righIsClickable}>{textRight}</TextRight>\n      </RightButton>\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst LeftButton = styled.TouchableOpacity`\n  border: 1px solid #ff4d42;\n  width: 49%;\n  padding: 2%;\n  border-radius: 5px;\n`;\nconst TextLeft = styled.Text`\n  font-size: 18px;\n  text-align: center;\n  color: #ff4d42;\n  font-weight: 500;\n`;\nconst RightButton = styled.TouchableOpacity`\n  border: ${(props) =>\n    props.isClickable ? '1px solid #083d77' : '1px solid rgba(31, 19, 0, 0.3)'}\n  width: 49%;\n  padding: 2%;\n  border-radius: 5px;\n`;\nconst TextRight = styled.Text`\n  font-size: 18px;\n  text-align: center;\n  color: ${(props) => (props.isClickable ? '#083d77' : 'rgba(31, 19, 0, 0.3)')}\n  font-weight: 500;\n`;\n\nexport default DuoButton;\n","import React, { useContext, useState } from 'react';\nimport styled from 'styled-components/native';\n\nimport DuoButton from '../styled-components/buttons/DuoButton';\n\nimport Icon from 'react-native-vector-icons/Entypo';\n\nimport axios from '../../helpers/api/axios.config';\nimport { UserContext } from '../../context/UserContext';\nimport displayAlertError from '../../helpers/Alert/errorAlert';\n\nconst OptionRender = ({\n  option,\n  setOptionList,\n  optionList,\n  setAddButtonIsPressed,\n  packId,\n}) => {\n  const { user } = useContext(UserContext);\n  const [newOption, setNewOption] = useState({\n    content: option ? option.content : null,\n    price_ht: option ? option.price_ht : null,\n    price_ttc: option ? option.price_ttc : null,\n    user_id: user.id,\n    pack_id: packId,\n  });\n\n  const handleDeleteOption = () => {\n    if (option) {\n      axios\n        .delete(`/api/options/${option.id}`)\n        .then((res) => res.data)\n        .then((optionDeleted) =>\n          setOptionList(optionList.filter((el) => el.id !== optionDeleted.id)),\n        );\n    } else {\n      setAddButtonIsPressed(false);\n    }\n  };\n\n  const handleAddOption = () => {\n    if (!newOption.content) {\n      displayAlertError(\"Merci de rentrer un nom d'option\");\n      return;\n    }\n    if (!newOption.price_ht) {\n      displayAlertError('Merci de rentrer un prix');\n      return;\n    }\n    axios\n      .post('/api/options', {\n        pack_id: newOption.pack_id,\n        price_ht: parseFloat(newOption.price_ht),\n        content: newOption.content,\n        user_id: newOption.user_id,\n      })\n      .then((res) => {\n        setOptionList(optionList.concat(res.data));\n        setAddButtonIsPressed(false);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleUpdateOption = () => {\n    axios\n      .put(`/api/options/${option.id}`, {\n        content: newOption.content,\n        price_ht: parseFloat(newOption.price_ht),\n        user_id: user.id,\n      })\n      .then((res) => res.data)\n      .then((optionUpdated) =>\n        setNewOption({ ...newOption, ...optionUpdated }),\n      );\n  };\n\n  return (\n    <Main>\n      <CrossContainer onPress={handleDeleteOption}>\n        <Icon name=\"cross\" size={30} color=\"rgba(31, 19, 0, 0.3)\" />\n      </CrossContainer>\n      <Text>Nom de l'option</Text>\n      <InputName\n        placeholder=\"Nom de l'option\"\n        onChangeText={(text) => setNewOption({ ...newOption, content: text })}\n        value={newOption.content}\n      />\n      <PriceWrapper>\n        {option && (\n          <PriceContainer>\n            <Text>Prix TTC</Text>\n            <InputPrice\n              placeholder=\"Prix TTC de l'option\"\n              value={newOption.price_ttc}\n            />\n          </PriceContainer>\n        )}\n        <PriceContainer>\n          <Text>Prix HT</Text>\n          <InputPrice\n            placeholder=\"Prix HT de l'option\"\n            onChangeText={(text) =>\n              setNewOption({ ...newOption, price_ht: text })\n            }\n            value={newOption.price_ht}\n          />\n        </PriceContainer>\n        <DuoButton\n          textLeft=\"Annuler\"\n          textRight={option ? 'Modifier' : 'Cr√©er'}\n          actionLeft={() => setAddButtonIsPressed(false)}\n          actionRight={() =>\n            option ? handleUpdateOption() : handleAddOption()\n          }\n          righIsClickable={true}\n        />\n      </PriceWrapper>\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  background: #fdfdff;\n  border: 1px solid rgba(31, 19, 0, 0.3);\n  padding: 10px 20px;\n  margin: 1% 0;\n`;\nconst CrossContainer = styled.TouchableOpacity`\n  align-self: flex-end;\n`;\nconst InputName = styled.TextInput`\n  margin: 2% 0;\n  font-size: 15px;\n  border: 1px solid #1f1300;\n  padding: 2% 5%;\n  font-weight: 600;\n  border-radius: 5px;\n`;\n\nconst InputPrice = styled.TextInput`\n  font-size: 15px;\n  border: 1px solid #1f1300;\n  border-radius: 5px;\n  padding: 2% 5%;\n`;\n\nconst Text = styled.Text`\n  margin-bottom: 5px;\n  font-weight: 600;\n  font-size: 15px;\n`;\nconst PriceWrapper = styled.View``;\nconst PriceContainer = styled.View`\n  margin: 2% 0;\n`;\n\nexport default OptionRender;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\nimport displayAlertError from '../../helpers/Alert/errorAlert';\nimport AddButton from '../styled-components/buttons/AddButton';\n\nimport axios from '../../helpers/api/axios.config';\nimport OptionRender from './OptionRender';\n\nconst OptionList = ({ pack }) => {\n  const [optionList, setOptionList] = useState([]);\n  const [addButtonIsPressed, setAddButtonIsPressed] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`/api/packs/${pack.id}`)\n      .then((res) => res.data)\n      .then((data) => setOptionList(data.option))\n      .catch((err) => displayAlertError(err));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Main>\n      <Title>Liste des options</Title>\n      <ListContainer>\n        {optionList &&\n          optionList.map((el) => (\n            <OptionRender\n              key={el.id}\n              option={el}\n              packId={pack.id}\n              optionList={optionList}\n              setOptionList={setOptionList}\n              setAddButtonIsPressed={setAddButtonIsPressed}\n            />\n          ))}\n      </ListContainer>\n      {addButtonIsPressed ? (\n        <OptionRender\n          setAddButtonIsPressed={setAddButtonIsPressed}\n          optionList={optionList}\n          packId={pack.id}\n          setOptionList={setOptionList}\n        />\n      ) : (\n        <AddButton\n          text=\"Ajouter une option\"\n          action={() => setAddButtonIsPressed(true)}\n        />\n      )}\n    </Main>\n  );\n};\n\nconst Main = styled.View``;\nconst Title = styled.Text`\n  text-align: center;\n  font-size: 18px;\n`;\nconst ListContainer = styled.View``;\n\nexport default OptionList;\n","import React, { useState } from 'react';\nimport styled from 'styled-components/native';\nimport Icon from 'react-native-vector-icons/Feather';\n\nimport displayAlertError from '../../helpers/Alert/errorAlert';\nimport OptionList from '../option/OptionList';\n\nimport axios from '../../helpers/api/axios.config';\n\nconst PackRender = ({ pack, setList, list }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleDeletePack = () => {\n    axios\n      .delete(`/api/packs/${pack.id}`)\n      .then((res) => res.data)\n      .then((packDeleted) =>\n        setList(list.filter((el) => el.id !== packDeleted.id)),\n      )\n      .catch((err) => displayAlertError(err));\n  };\n\n  return (\n    <Main>\n      <Header>\n        <TitleContainer onPress={() => setIsVisible(!isVisible)}>\n          <Title>{pack.name}</Title>\n          <Icon name={isVisible ? 'chevron-up' : 'chevron-down'} size={25} />\n        </TitleContainer>\n        <TrashContainer onPress={handleDeletePack}>\n          <Icon name=\"trash\" size={25} color=\"red\" />\n        </TrashContainer>\n      </Header>\n      {isVisible ? (\n        <OptionContainer>\n          <OptionList pack={pack} />\n        </OptionContainer>\n      ) : null}\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  background: #fdfdff;\n  border: 1px solid #1f1300;\n  padding: 10px 20px;\n  margin: 1% 0;\n`;\nconst Header = styled.View`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst TitleContainer = styled.TouchableOpacity`\n  display: flex;\n  flex-direction: row;\n`;\nconst TrashContainer = styled.TouchableOpacity``;\nconst Title = styled.Text`\n  font-size: 20px;\n`;\nconst OptionContainer = styled.View``;\n\nexport default PackRender;\n","import React, { useContext, useState } from 'react';\nimport styled from 'styled-components/native';\nimport PackRender from './PackRender';\nimport Icon from 'react-native-vector-icons/AntDesign';\nimport displayAlertError from '../../helpers/Alert/errorAlert';\n\nimport axios from '../../helpers/api/axios.config';\nimport { UserContext } from '../../context/UserContext';\n\nimport AddButton from '../styled-components/buttons/AddButton';\n\nconst PackList = ({ list, setList }) => {\n  const { user } = useContext(UserContext);\n  const [addButtonIsPressed, setAddButtonIsPressed] = useState(false);\n  const [packName, setPackName] = useState(null);\n\n  const fetchPackCreation = () => {\n    if (packName.length === null) {\n      setAddButtonIsPressed(false);\n      return;\n    }\n\n    axios\n      .post('/api/packs', {\n        name: packName,\n        user_id: user.id,\n      })\n      .then((res) => res.data)\n      .then((newPack) => {\n        setList(list.concat(newPack));\n        setAddButtonIsPressed(false);\n        setPackName(null);\n      })\n      .catch((error) => displayAlertError(error));\n  };\n\n  return (\n    <ListContainer>\n      {list &&\n        list.map((el) => (\n          <PackRender pack={el} key={el.id} setList={setList} list={list} />\n        ))}\n      {addButtonIsPressed ? (\n        <ButtonContainer>\n          <Input onChangeText={(text) => setPackName(text)} />\n          <BoxConfirm onPress={fetchPackCreation}>\n            <Icon name=\"check\" size={30} />\n          </BoxConfirm>\n        </ButtonContainer>\n      ) : (\n        <AddButton\n          text=\"Ajouter un pack\"\n          action={() => {\n            setAddButtonIsPressed(true);\n          }}\n        />\n      )}\n    </ListContainer>\n  );\n};\n\nconst ListContainer = styled.View``;\nconst Input = styled.TextInput`\n  padding: 3%;\n  border: 1px solid black;\n  border-radius: 5px;\n  font-size: 18px;\n  width: 85%;\n`;\nconst ButtonContainer = styled.View`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n`;\nconst BoxConfirm = styled.TouchableOpacity`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 10%;\n  padding: 1%;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nexport default PackList;\n","import React, { useState } from 'react';\nimport styled from 'styled-components/native';\n\nconst FormChoice = ({ actionLeft, actionRight, textLeft, textRight }) => {\n  const [leftIsActive, setLeftIsActive] = useState(false);\n  const [rightIsActive, setRightIsActive] = useState(false);\n\n  return (\n    <ButtonContainer>\n      <Button\n        onPress={() => {\n          actionLeft();\n          setLeftIsActive(true);\n          setRightIsActive(false);\n        }}\n        isActive={leftIsActive}\n      >\n        <ButtonText isActive={leftIsActive}>{textLeft}</ButtonText>\n      </Button>\n      <Button\n        onPress={() => {\n          actionRight();\n          setRightIsActive(true);\n          setLeftIsActive(false);\n        }}\n        isActive={rightIsActive}\n      >\n        <ButtonText isActive={rightIsActive}>{textRight}</ButtonText>\n      </Button>\n    </ButtonContainer>\n  );\n};\n\nconst ButtonContainer = styled.View`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst Button = styled.TouchableOpacity`\n  width: 45%;\n  border: 1px solid black;\n  padding: 3%;\n  background: ${(props) => (props.isActive ? '#083D77' : '#EFEFEF')};\n  border-radius: 5px;\n`;\nconst ButtonText = styled.Text`\n  font-size: 18px;\n  text-align: center;\n  font-weight: 500;\n  color: ${(props) => (props.isActive ? '#EFEFEF' : '#1F1300')};\n`;\n\nexport default FormChoice;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\n\nimport Icon from 'react-native-vector-icons/Feather';\n\nconst EstimateForm = ({ formStyle, customer, setCustomer }) => {\n  const [input, setInput] = useState({});\n  const [isFocus, setIsFocus] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n\n  useEffect(() => {\n    if (formStyle === 'ESTIMATE') {\n      setInput({\n        firstname: \"Pr√©nom de l'interlocuteur :\",\n        lastname: \"Nom de l'interlocuteur :\",\n        mail: \"Mail de l'interlocuteur :\",\n        phone: 'Num√©ro de t√©l√©phone : ',\n        company: \"Nom de l'entreprise :\",\n      });\n    } else {\n      setInput({\n        firstname: \"Pr√©nom de l'interlocuteur :\",\n        lastname: \"Nom de l'interlocuteur :\",\n        phone: 'Num√©ro de t√©l√©phone : ',\n        mail: \"Mail de l'interlocuteur :\",\n        company: \"Nom de l'entreprise :\",\n      });\n    }\n  }, [formStyle]);\n\n  return (\n    <Main isFocus={isFocus}>\n      <DisplayInfos onPress={() => setIsOpen(!isOpen)}>\n        <Text>Infos g√©n√©rales du devis</Text>\n        <IconContainer>\n          <Icon name={isOpen ? 'eye-off' : 'eye'} size={20} />\n        </IconContainer>\n      </DisplayInfos>\n      {isOpen ? (\n        <EstimateInfos>\n          {Object.entries(input).map(([key, value]) => {\n            return (\n              <InputContainer key={key}>\n                <Label>{value}</Label>\n                <Input\n                  onFocus={() => setIsFocus(true)}\n                  onEndEditing={() => setIsFocus(false)}\n                  value={customer[key]}\n                  onChangeText={(text) =>\n                    setCustomer({ ...customer, [key]: text })\n                  }\n                />\n              </InputContainer>\n            );\n          })}\n        </EstimateInfos>\n      ) : null}\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  border: 1px solid #1f1300;\n  padding: 5% 5%;\n  background: #fdfdff;\n  width: 100%;\n  border-radius: 5px;\n  margin-bottom: ${(props) => (props.isFocus ? '60%' : '0')};\n`;\nconst EstimateInfos = styled.View`\n  display: flex;\n  align-items: center;\n  margin-top: 10%;\n`;\n\nconst InputContainer = styled.View`\n  width: 100%;\n  padding: 3%;\n`;\nconst Input = styled.TextInput`\n  border-bottom-width: 1px;\n  border-bottom-color: #1f1300;\n  font-size: 18px;\n  padding: 2%;\n  margin-top: 1%;\n`;\nconst Label = styled.Text`\n  font-size: 18px;\n`;\nconst Text = styled.Text`\n  margin-right: 10%;\n  font-size: 18px;\n`;\nconst DisplayInfos = styled.TouchableOpacity`\n  display: flex;\n  flex-direction: row;\n  align-self: center;\n  align-items: center;\n`;\nconst IconContainer = styled.View``;\n\nexport default EstimateForm;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\nconst EstimateButton = ({ text, isActif, action }) => {\n  return (\n    <Main\n      isActif={isActif}\n      activeOpacity={isActif ? 0.2 : 1}\n      onPress={isActif ? action : null}\n    >\n      <Text isActif={isActif}>{text}</Text>\n    </Main>\n  );\n};\n\nconst Main = styled.TouchableOpacity`\n  padding: 10px 20px;\n  border: ${(props) =>\n    props.isActif\n      ? '2px solid rgba(8, 61, 119, 1)'\n      : '2px solid rgba(31, 19, 0, 0.3)'};\n  display: flex;\n  align-items: center;\n  border-radius: 5px;\n`;\nconst Text = styled.Text`\n  font-size: 20px;\n  font-weight: bold;\n  color: ${(props) =>\n    props.isActif\n      ? '2px solid rgba(8, 61, 119, 1)'\n      : '2px solid rgba(31, 19, 0, 0.3)'};\n`;\n\nexport default EstimateButton;\n","import React, { useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components/native';\n\nimport axios from '../../../helpers/api/axios.config';\nimport { UserContext } from '../../../context/UserContext';\n\nimport PackList from '../../../components/pack/PackList';\n\nimport FormChoice from '../../../components/styled-components/buttons/FormChoice';\nimport EstimateForm from '../../../components/estimate/EstimateForm';\n\nimport EstimateButton from '../../../components/styled-components/buttons/EstimateButton';\nimport displayAlertError from '../../../helpers/Alert/errorAlert';\n\nconst FileCreation = ({ route }) => {\n  const { user } = useContext(UserContext);\n\n  const [formToDisplay, setFormToDisplay] = useState(null);\n  const [generateButton, setGenerateButton] = useState(false);\n  const [packList, setPackList] = useState([]);\n  const [file, setFile] = useState({\n    type: route.params ? route.params.file.type : null,\n    user_id: user.id,\n    reduction: route.params ? route.params.file.reduction : null,\n    pack: {\n      connect: [],\n    },\n  });\n  const [customer, setCustomer] = useState({\n    firstname: null,\n    lastname: null,\n    company: null,\n    phone: null,\n    mail: null,\n  });\n  const [displayButtons, setDisplayButtons] = useState(false);\n  const [action, setAction] = useState('');\n\n  useEffect(() => {\n    if (route.params) {\n      const { file: fileToUpdate } = route.params;\n      setFile(fileToUpdate);\n      setPackList(fileToUpdate.pack);\n      setFormToDisplay(fileToUpdate.type === 'estimate' ? 'ESTIMATE' : 'BILL');\n      setCustomer(fileToUpdate.customer);\n      setDisplayButtons(true);\n      setAction('UPDATE');\n    } else {\n      setAction('CREATE');\n    }\n  }, [route.params]);\n\n  useEffect(() => {\n    const json = packList.map((el) => `{\"id\" : ${el.id}}`);\n    const obj = json.map((el) => JSON.parse(el));\n    setFile({ ...file, pack: { connect: obj } });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [packList]);\n\n  console.log(file);\n\n  useEffect(() => {\n    if (\n      action === 'CREATE' &&\n      customer.firstname !== null &&\n      customer.lastname !== null &&\n      customer.company !== null &&\n      customer.phone !== null &&\n      customer.mail !== null &&\n      packList.length > 0\n    ) {\n      setGenerateButton(true);\n    } else if (action === 'UPDATE') {\n      setGenerateButton(true);\n    }\n  }, [\n    action,\n    customer.company,\n    customer.firstname,\n    customer.lastname,\n    customer.mail,\n    customer.phone,\n    packList.length,\n  ]);\n\n  const handleCreateFile = async () => {\n    try {\n      const newCustomer = await axios.post('/api/customers', customer);\n      if (newCustomer.data) {\n        const newFile = await axios.post('/api/files', {\n          ...file,\n          customer_id: newCustomer.data.id,\n        });\n\n        if (!newFile) {\n          displayAlertError(\n            \"Une erreur s'est produite lors de la cr√©ation du fichier\",\n          );\n        }\n      } else {\n        displayAlertError(\"Une erreur s'est produite \");\n      }\n    } catch (error) {\n      displayAlertError(error);\n    }\n    setDisplayButtons(true);\n  };\n\n  const handleUpdateEstimate = async () => {\n    try {\n      const estimateUpdated = axios.put(`api/files/${route.params.file.id}`, {\n        ...file,\n        reduction: parseFloat(file.reduction),\n      });\n      if (estimateUpdated) {\n        setDisplayButtons(true);\n      } else {\n        displayAlertError('Une erreur est survenue, merci de r√©essayer');\n      }\n    } catch (error) {\n      displayAlertError(error);\n    }\n  };\n\n  return (\n    <Main>\n      <ContentWrapper>\n        <ButtonWrapper>\n          <FormChoice\n            textLeft=\"Devis\"\n            textRight=\"Facture\"\n            actionLeft={() => {\n              setFormToDisplay('ESTIMATE');\n              setFile({ ...file, type: 'estimate' });\n            }}\n            actionRight={() => {\n              setFormToDisplay('BILL');\n              setFile({ ...file, type: 'bill' });\n            }}\n          />\n        </ButtonWrapper>\n        <FormContainer>\n          {formToDisplay && (\n            <EstimateForm\n              formStyle={formToDisplay}\n              customer={customer}\n              setCustomer={setCustomer}\n            />\n          )}\n        </FormContainer>\n        <AnswerListWrapper>\n          <TitleList>Liste des pack</TitleList>\n          <PackList list={packList} setList={setPackList} />\n        </AnswerListWrapper>\n        <InputContainer>\n          <Input\n            placeholder=\"Ajouter une r√©duction\"\n            onChangeText={(text) => setFile({ ...file, reduction: text })}\n            value={file.reduction !== 0 ? file.reduction : null}\n          />\n        </InputContainer>\n      </ContentWrapper>\n      <ButtonContainer>\n        <EstimateButton\n          text={action === 'CREATE' ? 'Cr√©er' : 'Modifier'}\n          isActif={generateButton}\n          action={action === 'CREATE' ? handleCreateFile : handleUpdateEstimate}\n        />\n      </ButtonContainer>\n      {displayButtons && !file.price ? (\n        <ActionButton>\n          <EstimateButton text=\"Partager\" isActif />\n          <EstimateButton text=\"Voir\" isActif />\n        </ActionButton>\n      ) : null}\n    </Main>\n  );\n};\n\nconst Main = styled.ScrollView`\n  background: #eeeff5;\n  height: 100%;\n`;\nconst ContentWrapper = styled.View`\n  display: flex;\n  align-items: center;\n`;\nconst FormContainer = styled.View`\n  width: 90%;\n  margin-top: 10%;\n`;\nconst ButtonWrapper = styled.View`\n  margin-top: 5%;\n  width: 90%;\n`;\nconst AnswerListWrapper = styled.View`\n  width: 90%;\n  margin-top: 5%;\n`;\nconst TitleList = styled.Text`\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 3%;\n  text-align: center;\n`;\nconst ButtonContainer = styled.View`\n  width: 90%;\n  margin: 5% 0 15% 0;\n  align-self: center;\n`;\nconst ActionButton = styled.View`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  align-self: center;\n  justify-content: space-between;\n  margin-bottom: 10%;\n`;\nconst InputContainer = styled.View`\n  width: 90%;\n`;\nconst Input = styled.TextInput`\n  margin: 2% 0;\n  font-size: 15px;\n  border: 1px solid rgba(31, 19, 0, 0.3);\n  background: #fdfdff;\n  padding: 2% 5%;\n  font-weight: 600;\n  border-radius: 5px;\n`;\n\nexport default FileCreation;\n","import React, { useState } from 'react';\nimport styled from 'styled-components/native';\nimport { useNavigation } from '@react-navigation/native';\nimport * as WebBrowser from 'expo-web-browser';\n\nimport Icon from 'react-native-vector-icons/AntDesign';\nimport axios from '../../helpers/api/axios.config';\n\nconst EstimatesInfos = ({ file, estimateList, setEstimateList }) => {\n  const navigation = useNavigation();\n  const { customer } = file;\n  const [fileInfoOpen, setFileInfoOpen] = useState(false);\n\n  const handleDeleteEstimate = () => {\n    axios\n      .delete(`/api/files/${file.id}`)\n      .then((res) => res.data)\n      .then((deletedFile) =>\n        setEstimateList(estimateList.filter((el) => el.id !== deletedFile.id)),\n      )\n      .catch((err) => console.error(err));\n  };\n\n  const handleSeePdf = async () => {\n    await axios.post('/upload-pdf', file);\n    await WebBrowser.openBrowserAsync('http://172.20.10.2:5001/test.pdf');\n  };\n\n  return (\n    <Main>\n      <Header>\n        <TitleContainer onPress={() => setFileInfoOpen(!fileInfoOpen)}>\n          <Text>{customer.company} </Text>\n          <ChevronContainer>\n            {fileInfoOpen ? (\n              <Icon name=\"down\" size={20} />\n            ) : (\n              <Icon name=\"right\" size={20} />\n            )}\n          </ChevronContainer>\n        </TitleContainer>\n        <DeleteButtonContainer onPress={handleDeleteEstimate}>\n          <Icon name=\"delete\" size={20} />\n        </DeleteButtonContainer>\n      </Header>\n      {fileInfoOpen && (\n        <Body>\n          <InfosContainer>\n            <TextTitle>Type :</TextTitle>\n            <Text>{file.type === 'estimate' ? 'Devis' : 'Facture'}</Text>\n          </InfosContainer>\n          <InfosContainer>\n            <TextTitle>Prix total :</TextTitle>\n            <Text>{file.price_ht} ‚Ç¨ / HT</Text>\n            <TextTitle>Nom du client :</TextTitle>\n            <Text>{customer.firstname + ' ' + customer.lastname}</Text>\n          </InfosContainer>\n          <InfosContainer>\n            <TextTitle>Mail du client :</TextTitle>\n            <Text>{customer.mail}</Text>\n          </InfosContainer>\n          <InfosContainer>\n            <TextTitle>Num√©ro du client :</TextTitle>\n            <Text>{customer.phone}</Text>\n          </InfosContainer>\n          <ButtonWrapper>\n            <Button\n              onPress={() =>\n                navigation.navigate('Cr√©ation de devis', {\n                  file: file,\n                })\n              }\n            >\n              <ButtonText>Modifier</ButtonText>\n            </Button>\n            <Button onPress={handleSeePdf}>\n              <ButtonText>Voir</ButtonText>\n            </Button>\n            <Button>\n              <ButtonText>Envoyer</ButtonText>\n            </Button>\n          </ButtonWrapper>\n        </Body>\n      )}\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  box-shadow: 0px 0px 2px rgba(255, 255, 255, 1);\n`;\nconst Header = styled.View`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5% 3%;\n  background: #f092ff;\n`;\nconst TitleContainer = styled.TouchableOpacity`\n  width: 50%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst ChevronContainer = styled.View``;\nconst Text = styled.Text`\n  font-size: 18px;\n  font-weight: 400;\n`;\nconst InfosContainer = styled.View`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-width: 1px;\n  padding: 10px 0;\n  border-bottom-color: rgba(31, 19, 0, 0.3);\n`;\nconst TextTitle = styled.Text`\n  font-size: 18px;\n  font-weight: 600;\n`;\nconst DeleteButtonContainer = styled.TouchableOpacity`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Body = styled.View`\n  background: #fdfdff;\n  padding: 5% 3%;\n  border-bottom-width: 1px;\n  border-bottom-color: rgba(31, 19, 0, 0.3);\n`;\n\nconst ButtonWrapper = styled.View`\n  display: flex;\n  margin-top: 2%;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst Button = styled.TouchableOpacity`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30%;\n  border: 1px solid #083d77;\n  padding: 3%;\n  border-radius: 3px;\n`;\nconst ButtonText = styled.Text`\n  font-size: 16px;\n  font-weight: 600;\n  color: #083d77;\n`;\n\nexport default EstimatesInfos;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\nimport EstimatesInfos from './EstimatesInfos';\n\nconst RenderEstimateInList = ({ estimateList, setEstimateList }) => {\n  return (\n    <Main>\n      {estimateList.length > 0\n        ? estimateList.map((el, i) => (\n            <EstimatesInfos\n              key={i}\n              file={el}\n              setEstimateList={setEstimateList}\n              estimateList={estimateList}\n            />\n          ))\n        : null}\n    </Main>\n  );\n};\n\nconst Main = styled.View``;\n\nexport default RenderEstimateInList;\n","import React from 'react';\nimport styled from 'styled-components/native';\nstyled;\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst SearchBar = ({ value, setValue }) => {\n  return (\n    <Main>\n      <InputSearch\n        placeholder=\"Rechercher\"\n        value={value}\n        onChangeText={setValue}\n      />\n      <IconContainer>\n        <Icon name=\"search\" size={30} color=\"#8c8787\" />\n      </IconContainer>\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  background: #fdfdff;\n  border: 1px solid black;\n  border-radius: 30px;\n  padding: 10px 20px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n`;\n\nconst InputSearch = styled.TextInput`\n  font-size: 18px;\n  width: 90%;\n`;\nconst IconContainer = styled.View`\n  width: 10%;\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport default SearchBar;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components/native';\nimport { RefreshControl } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport axios from '../../../helpers/api/axios.config';\n\nimport RenderEstimateInList from '../../../components/estimate/RenderEstimateInList';\nimport SearchBar from '../../../components/styled-components/SearchBar';\n\nconst EstimateList = () => {\n  const navigation = useNavigation();\n  const [estimateList, setEstimateList] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [searchedWord, setSearchedWord] = useState('');\n\n  const fetchData = useCallback(async () => {\n    await axios\n      .get('/api/files')\n      .then((res) => res.data)\n      .then((estimate) => {\n        if (searchedWord !== '') {\n          setEstimateList(\n            estimate.filter(\n              (e) =>\n                e.customer.company.includes(searchedWord.toLowerCase()) ||\n                e.customer.company.includes(searchedWord.toUpperCase()),\n            ),\n          );\n        } else {\n          setEstimateList(estimate);\n        }\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchedWord]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    fetchData();\n    setRefreshing(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Main>\n      <ListContainer\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        <FilterContainer>\n          <SearchContainer>\n            {/* recherche par le nom de la bo√Æte */}\n            <SearchBar value={searchedWord} setValue={setSearchedWord} />\n          </SearchContainer>\n        </FilterContainer>\n        {estimateList ? (\n          <RenderEstimateInList\n            estimateList={estimateList}\n            setEstimateList={setEstimateList}\n          />\n        ) : (\n          <NoEstimateContainer>\n            <TextContainer>\n              <Text>Il n'y a pas encore de devis effectu√©s</Text>\n            </TextContainer>\n            <ButtonToNavigate\n              onPress={() => navigation.navigate('Cr√©ation de devis')}\n            >\n              <NavigationText>Faire un devis</NavigationText>\n            </ButtonToNavigate>\n          </NoEstimateContainer>\n        )}\n      </ListContainer>\n    </Main>\n  );\n};\n\nconst Main = styled.SafeAreaView``;\nconst ListContainer = styled.ScrollView``;\nconst Text = styled.Text`\n  font-size: 18px;\n`;\nconst NavigationText = styled.Text`\n  font-size: 20px;\n  font-weight: 500;\n  color: #083d77;\n`;\nconst NoEstimateContainer = styled.View`\n  display: flex;\n  align-items: center;\n`;\nconst ButtonToNavigate = styled.TouchableOpacity`\n  margin-top: 3%;\n`;\nconst TextContainer = styled.View`\n  display: flex;\n  align-items: center;\n  margin-top: 10%;\n`;\nconst SearchContainer = styled.View`\n  width: 90%;\n`;\nconst FilterContainer = styled.View`\n  width: 100%;\n  ${'' /* height: 10%; */}\n  margin: 5% 0;\n  display: flex;\n  align-items: center;\n`;\n\nexport default EstimateList;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { useNavigation } from '@react-navigation/native';\n\nconst RenderUsersInList = ({ user, iconName }) => {\n  const navigation = useNavigation();\n\n  return (\n    <Main>\n      <IconWrapper>\n        <Icon name={iconName} size={50} />\n      </IconWrapper>\n      <InfosSection>\n        <InfoName>\n          {user.firstName} {user.lastName}\n        </InfoName>\n        <Role>{user.Role.Name}</Role>\n        <EstimateNumber>\n          {user._count.Estimate === 0\n            ? 'Pas encore de devis effectu√©'\n            : `${user._count.Estimate} devis effectu√©s`}\n        </EstimateNumber>\n      </InfosSection>\n      <Params\n        onPress={() =>\n          navigation.push('Utilisateur admin view', {\n            user: user,\n          })\n        }\n      >\n        <Icon name=\"ellipsis-h\" size={30} />\n      </Params>\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 10px;\n  border-bottom-width: 1px;\n`;\nconst IconWrapper = styled.View`\n  width: 20%;\n`;\nconst InfoName = styled.Text`\n  align-self: flex-start;\n  font-weight: 600;\n`;\nconst EstimateNumber = styled.Text`\n  color: #ff9b42;\n  font-weight: 600;\n`;\nconst Role = styled.Text`\n  align-self: flex-start;\n  color: #8c8787;\n`;\nconst InfosSection = styled.View`\n  width: 70%;\n  display: flex;\n`;\nconst Params = styled.TouchableOpacity`\n  width: 30%;\n`;\n\nexport default RenderUsersInList;\n","import React from 'react';\nimport { FlatList } from 'react-native';\nimport styled from 'styled-components/native';\n\nimport RenderUsersInList from './RenderUsersInList';\n\nconst UserList = ({ elems }) => {\n  const renderItem = ({ item }) => {\n    return <RenderUsersInList user={item} iconName=\"user\" />;\n  };\n\n  if (elems[0] !== undefined) {\n    return (\n      <ListWrapper>\n        <FlatList\n          data={elems}\n          renderItem={renderItem}\n          keyExtractor={(item) => item.id}\n          horizontal=\"false\"\n        />\n      </ListWrapper>\n    );\n  }\n\n  return <InfosText>Il n'y a pas de donn√©es √† afficher</InfosText>;\n};\n\nconst ListWrapper = styled.View`\n  border-top-width: 1px;\n`;\nconst InfosText = styled.Text``;\n\nexport default UserList;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\nimport axios from '../../../helpers/api/axios.config';\nimport { useNavigation } from '@react-navigation/native';\n\nimport UserList from '../../../components/parameters/UserList';\nimport AddButton from '../../../components/styled-components/buttons/AddButton';\nimport SearchBar from '../../../components/styled-components/SearchBar';\n\nimport displayAlertError from '../../../helpers/Alert/errorAlert';\n\nconst AccountListPage = () => {\n  const navigation = useNavigation();\n  const [userList, setUserList] = useState([]);\n  const [searchedWord, setSearchedWord] = useState('');\n\n  useEffect(() => {\n    axios\n      .get('/api/users')\n      .then((response) => response.data)\n      .then((data) => {\n        if (searchedWord !== '') {\n          setUserList(\n            data.filter(\n              (e) =>\n                e.firstName.includes(searchedWord.toLowerCase()) ||\n                e.firstName.includes(searchedWord.toUpperCase()) ||\n                e.lastName.includes(searchedWord.toLowerCase()) ||\n                e.lastName.includes(searchedWord.toUpperCase()),\n            ),\n          );\n        } else {\n          setUserList(data);\n        }\n      })\n      .catch((err) => displayAlertError(err));\n  }, [searchedWord]);\n\n  return (\n    <Main>\n      <SearchBarWrapper>\n        <SearchBar value={searchedWord} setValue={setSearchedWord} />\n      </SearchBarWrapper>\n      <ListContainer>\n        <UserList elems={userList} />\n        <ButtonWrapper>\n          <AddButton\n            text=\"Ajouter un utilisateur\"\n            action={() => navigation.navigate('Cr√©ation utilisateur')}\n          />\n        </ButtonWrapper>\n      </ListContainer>\n    </Main>\n  );\n};\n\nconst Main = styled.SafeAreaView`\n  background: #eeeff5;\n  height: 100%;\n  display: flex;\n  width: 100%;\n  align-items: center;\n`;\nconst ButtonWrapper = styled.View`\n  align-self: center;\n  width: 70%;\n  margin-top: 5%;\n`;\nconst ListContainer = styled.View`\n  height: 70%;\n  width: 100%;\n  border-bottom-width: 1px;\n`;\nconst SearchBarWrapper = styled.View`\n  width: 80%;\n  margin: 5% 0;\n`;\n\nexport default AccountListPage;\n","import React from 'react';\nimport { Text } from 'react-native';\nimport styled from 'styled-components/native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst AccountInfos = ({ user }) => {\n  const { mail, firstName, lastName, role_id } = user;\n\n  const nameToDisplay = firstName + ' ' + lastName;\n  let roleName;\n\n  if (role_id) {\n    if (role_id === 1) {\n      roleName = 'Admin';\n    }\n  }\n\n  return (\n    <Main>\n      <IconContainer>\n        <Icon name=\"user\" size={120} color=\"#1f1300\" />\n      </IconContainer>\n      <InfoContainer>\n        <TextName>{mail}</TextName>\n        <Text>{nameToDisplay.toUpperCase()}</Text>\n        <Text>{roleName}</Text>\n      </InfoContainer>\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  display: flex;\n  align-items: center;\n  margin-top: 5%;\n  background: #eeeff5;\n`;\nconst IconContainer = styled.View`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 3px solid #1f1300;\n  border-radius: 100%;\n  width: 150px;\n  height: 150px;\n  background-color: #fdfdff;\n`;\nconst InfoContainer = styled.View`\n  margin-top: 2%;\n  display: flex;\n  align-items: center;\n`;\nconst TextName = styled.Text`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport default AccountInfos;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst ItemInfos = ({ title, link, autorisedRole }) => {\n  const navigation = useNavigation();\n\n  // const userHadAutorisation = () => {\n  //   let isAutorised = true;\n\n  //   if (autorisedRole) {\n  //     if (user.role_name.toLowerCase() !== autorisedRole.toLowerCase()) {\n  //       return (isAutorised = false);\n  //     }\n  //   }\n  //   return isAutorised;\n  // };\n\n  return (\n    <TouchableWrapper>\n      <Main onPress={() => navigation.navigate(link)}>\n        <Content>{title}</Content>\n        <Icon name=\"chevron-right\" size={25} color=\"#A8A39A\" />\n      </Main>\n    </TouchableWrapper>\n  );\n};\n\nconst Main = styled.TouchableOpacity`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 0;\n`;\nconst Content = styled.Text`\n  font-size: 20px;\n`;\nconst TouchableWrapper = styled.View`\n  width: 90%;\n  border-bottom-width: 2px;\n  border-bottom-color: lightgrey;\n`;\n\nexport default ItemInfos;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\nimport ItemInfos from '../account/ItemInfos';\n\nconst ParameterList = ({ parameters }) => {\n  return (\n    <ListWrapper>\n      {parameters.length > 0\n        ? parameters.map((el, i) => (\n            <ItemInfos\n              key={i}\n              title={el.title}\n              link={el.link}\n              autorisedRole={el.autorisedRole}\n            />\n          ))\n        : null}\n    </ListWrapper>\n  );\n};\n\nconst ListWrapper = styled.View`\n  padding: 5% 0 5% 5%;\n  display: flex;\n  align-items: center;\n  border: 1px solid black;\n  width: 90%;\n  height: 50%;\n  align-self: center;\n  border-radius: 10px;\n  background: #fdfdff;\n  margin-top: 5%;\n`;\n\nexport default ParameterList;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst DeleteButton = ({ text, action, isActif }) => {\n  return (\n    <Button onPress={action}>\n      {text && <ButtonText>{text}</ButtonText>}\n      <Icon name=\"trash\" size={25} color=\"#ff4d42\" />\n    </Button>\n  );\n};\n\nconst Button = styled.TouchableOpacity`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  border: 1px solid #ff4d42;\n  padding: 20%;\n  background: #fdfdff;\n  border-radius: 5px;\n`;\nconst ButtonText = styled.Text`\n  font-size: 20px;\n  font-weight: 500;\n  color: #ff4d42;\n`;\n\nexport default DeleteButton;\n","export const PARAMETERS = [\n  {\n    id: 1,\n    title: 'Modifier le mot de passe',\n    link: 'Changement du mot de passe',\n  },\n  {\n    id: 2,\n    title: \"Modifier l'adresse mail\",\n    link: 'Changement du mail',\n  },\n];\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { Alert } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\n// import { deleteUser } from '../../../helpers/api/fetchApi';\nimport AccountInfos from '../../../components/account/AccountInfos';\nimport AccountParameterList from '../../../components/parameters/ParameterList';\nimport DeleteButton from '../../../components/styled-components/buttons/DeleteButton';\n\nimport { PARAMETERS } from '../../../app/datas/accountParametersList';\n\nconst AccountAdminView = ({ route }) => {\n  const navigation = useNavigation();\n  const { user } = route.params;\n\n  // const handleDeleteUser = async () => {\n  //   const response = await deleteUser(user.id);\n\n  //   const { errors, userDatas } = response;\n  //   if (errors) {\n  //     const { isDeleted } = errors;\n  //     showAlertInfo(isDeleted);\n  //   }\n  //   if (userDatas) {\n  //     const { isDeleted } = userDatas;\n  //     showAlertInfo(isDeleted);\n  //   }\n  // };\n\n  const showAlertInfo = (condition) => {\n    if (condition === true) {\n      return Alert.alert(\n        \"L'utilisateur a bien √©t√© supprim√© ‚úÖ\",\n        \"L'utilisateur a √©t√© supprim√© avec succ√®s.\",\n        [\n          {\n            text: 'Suivant',\n            onPress: () => navigation.navigate('Liste des utilisateurs'),\n            style: 'default',\n          },\n        ],\n      );\n    } else {\n      return Alert.alert(\n        'Utilisateur introuvable ‚ùå',\n        \"L'utilisateur a peut √™tre d√©j√† √©t√© supprim√©\",\n        [\n          {\n            text: 'Suivant',\n            onPress: () => navigation.navigate('Liste des utilisateurs'),\n            style: 'default',\n          },\n        ],\n      );\n    }\n  };\n\n  const deleteConfirmation = () => {\n    Alert.alert(\n      \"Suppression d'un utilisateur\",\n      'Vous √™tes sur le point de supprimer un utilisateur, voulez-vous continuer ?',\n      [\n        {\n          text: 'Annuler',\n          onPress: () => Alert.alert(\"L'utilisateur n'a pas √©t√© supprim√©\"),\n          style: 'cancel',\n        },\n        {\n          text: 'Continuer',\n          // onPress: () => handleDeleteUser(),\n        },\n      ],\n    );\n  };\n\n  return (\n    <Main>\n      <AccountInfos user={user} />\n      <AccountParameterList parameters={PARAMETERS} />\n      <ButtonContainer>\n        <DeleteButton text=\"Supprimer\" action={deleteConfirmation} />\n      </ButtonContainer>\n    </Main>\n  );\n};\n\nconst Main = styled.SafeAreaView`\n  background: #eeeff5;\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\nconst ButtonContainer = styled.View`\n  width: 50%;\n  margin-top: 10%;\n`;\n\nexport default AccountAdminView;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\nconst FirstButton = ({ text, action, isClickable, style }) => {\n  return (\n    <Button\n      isClickable={isClickable}\n      onPress={isClickable ? action : null}\n      activeOpacity={isClickable ? 0.2 : 1}\n      style={style}\n    >\n      <ButtonText isClickable={isClickable}>{text}</ButtonText>\n    </Button>\n  );\n};\n\nconst Button = styled.TouchableOpacity`\n  background: ${(props) =>\n    props.isClickable ? props.style.colorActive : props.style.colorInactive};\n  width: 100%;\n  height: 100%;\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 4px 5px 5px rgba(31, 19, 0, 0.5);\n`;\nconst ButtonText = styled.Text`\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => (props.isClickable ? '#EFEFEF' : '#1F1300')};\n`;\n\nexport default FirstButton;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\nimport { Alert, Text } from 'react-native';\n\nimport FirstButton from '../../../components/styled-components/buttons/FirstButton';\n\nconst UpdateMail = () => {\n  const [mail, setMail] = useState({\n    value: '',\n    isCorrect: true,\n  });\n  const [isEnterMail, setIsEnterMail] = useState(false);\n  // const [areTheSame, setAreTheSame] = useState(false);\n  const [newMail, setNewMail] = useState('');\n  const [newMailConfirmation, setNewMailConfirmation] = useState('');\n\n  const [isFocused, setIsFocused] = useState(false);\n  const marginForFocusedInput = isFocused ? 300 : 0;\n\n  useEffect(() => {\n    // c'est ici que l'on va tester si le mot de passe rentr√© est le bon\n    // il faut n√©anmoins s√©curiser la route histoire que n'importe qui ne puisse pas\n    // modifier n'importe quel mot de passe\n    if (isEnterMail) {\n      console.log('password is input');\n    } else {\n      console.log('no password input');\n    }\n  }, [isEnterMail]);\n\n  const showMailErrorAlert = () => {\n    Alert.alert(\n      'Mauvaise adresse mail',\n      \"L'adresse mail rentr√©e n'est pas la bonne, merci d'essayer √† nouveau\",\n      [\n        {\n          text: 'ok',\n          onPress: () => setMail({ ...mail, value: '' }),\n          style: 'destructive',\n        },\n      ],\n    );\n  };\n\n  const [areTheSame, setAreTheSame] = useState(false);\n  const testNewPassword = () => {\n    if (newMail === newMailConfirmation) {\n      setAreTheSame(true);\n    }\n  };\n\n  return (\n    <Main>\n      <Title>Changement d'adresse mail</Title>\n      <InputContainer>\n        <TextInput>Rentrez votre adresse mail actuelle :</TextInput>\n        <Input\n          value={mail.value}\n          keyboardType=\"email-address\"\n          onChangeText={(text) => setMail({ ...mail, value: text })}\n          clearButtonMode=\"while-editing\"\n          onEndEditing={() => {\n            setIsEnterMail(true);\n            !mail.isCorrect ? showMailErrorAlert() : null;\n          }}\n        />\n      </InputContainer>\n      <InputContainer>\n        <TextInput>Rentrez votre nouvelle adresse mail :</TextInput>\n        <Input\n          value={newMail}\n          keyboardType=\"email-address\"\n          onChangeText={setNewMail}\n          editable={mail.isCorrect}\n          clearButtonMode=\"while-editing\"\n        />\n      </InputContainer>\n      <InputContainer>\n        <TextInput>Confirmez votre nouvelle adresse mail :</TextInput>\n        <Input\n          value={newMailConfirmation}\n          keyboardType=\"email-address\"\n          onChangeText={setNewMailConfirmation}\n          style={{ marginBottom: marginForFocusedInput }}\n          onFocus={() => setIsFocused(true)}\n          onEndEditing={() => {\n            setIsFocused(false);\n            testNewPassword();\n          }}\n          editable={mail.isCorrect}\n          clearButtonMode=\"while-editing\"\n        />\n      </InputContainer>\n      <ButtonContainer>\n        <FirstButton text=\"Changer\" isClickable={true} style={style.button} />\n      </ButtonContainer>\n      {newMail && newMailConfirmation && !areTheSame ? (\n        <Text>Les adresses ne concordent pas</Text>\n      ) : null}\n    </Main>\n  );\n};\n\nconst style = {\n  button: {\n    colorActive: '#083D77',\n    colorInactive: '#EFEFEF',\n  },\n};\n\nconst Main = styled.View`\n  height: 100%;\n  background: #eeeff5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst InputContainer = styled.View`\n  width: 70%;\n  margin-bottom: 6%;\n`;\nconst Input = styled.TextInput`\n  font-size: 20px;\n  padding: 10px;\n  background: #fdfdff;\n  border: 2px solid black;\n  margin-top: 10px;\n`;\nconst TextInput = styled.Text`\n  font-size: 18px;\n  font-weight: 600;\n`;\nconst Title = styled.Text`\n  font-size: 25px;\n  font-weight: 700;\n  margin-bottom: 20%;\n  width: 60%;\n  text-align: center;\n`;\nconst ButtonContainer = styled.View`\n  width: 30%;\n  height: 8%;\n`;\n\nexport default UpdateMail;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\nimport { Alert, Text } from 'react-native';\n\nimport FirstButton from '../../../components/styled-components/buttons/FirstButton';\n\nconst UpdatePassword = () => {\n  const [password, setPassword] = useState({\n    value: '',\n    isCorrect: true,\n  });\n  const [isEnterPass, setIsEnterPass] = useState(false);\n  // const [areTheSame, setAreTheSame] = useState(false);\n  const [newPassword, setNewPassword] = useState('');\n  const [newPasswordConfirmation, setNewPasswordConfirmation] = useState('');\n\n  const [isFocused, setIsFocused] = useState(false);\n  const marginForFocusedInput = isFocused ? 300 : 0;\n\n  useEffect(() => {\n    // c'est ici que l'on va tester si le mot de passe rentr√© est le bon\n    // il faut n√©anmoins s√©curiser la route histoire que n'importe qui ne puisse pas\n    // modifier n'importe quel mot de passe\n    if (isEnterPass) {\n      console.log('password is input');\n    } else {\n      console.log('no password input');\n    }\n  }, [isEnterPass]);\n\n  const showPassErrorAlert = () => {\n    Alert.alert(\n      'Mauvais mot de passe',\n      \"Le mot de passe rentr√© n'est pas bon, merci de le saisir √† nouveau\",\n      [\n        {\n          text: 'ok',\n          onPress: () => setPassword({ ...password, value: '' }),\n          style: 'destructive',\n        },\n      ],\n    );\n  };\n\n  const [areTheSame, setAreTheSame] = useState(false);\n  const testNewPassword = () => {\n    if (newPassword === newPasswordConfirmation) {\n      setAreTheSame(true);\n    }\n  };\n\n  return (\n    <Main>\n      <Title>Changement de mot de passe</Title>\n      <InputContainer>\n        <TextInput>Rentrez votre mot de passe :</TextInput>\n        <Input\n          value={password.value}\n          onChangeText={(text) => setPassword({ ...password, value: text })}\n          secureTextEntry={true}\n          clearButtonMode=\"while-editing\"\n          onEndEditing={() => {\n            setIsEnterPass(true);\n            !password.isCorrect ? showPassErrorAlert() : null;\n          }}\n        />\n      </InputContainer>\n      <InputContainer>\n        <TextInput>Rentrez votre nouveau mot de passe :</TextInput>\n        <Input\n          value={newPassword}\n          onChangeText={setNewPassword}\n          editable={password.isCorrect}\n          clearButtonMode=\"while-editing\"\n        />\n      </InputContainer>\n      <InputContainer>\n        <TextInput>Rentrez votre nouveau mot de passe :</TextInput>\n        <Input\n          value={newPasswordConfirmation}\n          onChangeText={setNewPasswordConfirmation}\n          style={{ marginBottom: marginForFocusedInput }}\n          onFocus={() => setIsFocused(true)}\n          onEndEditing={() => {\n            setIsFocused(false);\n            testNewPassword();\n          }}\n          editable={password.isCorrect}\n          clearButtonMode=\"while-editing\"\n        />\n      </InputContainer>\n      <ButtonContainer>\n        <FirstButton text=\"Changer\" isClickable={true} style={style.button} />\n      </ButtonContainer>\n      {newPassword && newPasswordConfirmation && !areTheSame ? (\n        <Text>Les mots de passes ne concordent pas</Text>\n      ) : null}\n    </Main>\n  );\n};\n\nconst style = {\n  button: {\n    colorActive: '#083D77',\n    colorInactive: '#EFEFEF',\n  },\n};\n\nconst Main = styled.View`\n  height: 100%;\n  background: #eeeff5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst InputContainer = styled.View`\n  width: 70%;\n  margin-bottom: 6%;\n`;\nconst Input = styled.TextInput`\n  font-size: 20px;\n  padding: 10px;\n  background: #fdfdff;\n  border: 2px solid black;\n  margin-top: 10px;\n`;\nconst TextInput = styled.Text`\n  font-size: 18px;\n  font-weight: 600;\n`;\nconst Title = styled.Text`\n  font-size: 25px;\n  font-weight: 700;\n  margin-bottom: 20%;\n  width: 60%;\n  text-align: center;\n`;\nconst ButtonContainer = styled.View`\n  width: 30%;\n  height: 8%;\n`;\n\nexport default UpdatePassword;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { Picker } from '@react-native-picker/picker';\n\nconst UserCreation = ({ newUser, setNewUser }) => {\n  const { lastName, firstName, mail, role_id } = newUser;\n\n  return (\n    <Main>\n      <InputContainer>\n        <Input\n          clearButtonMode=\"while-editing\"\n          autoCorrect={false}\n          placeholder=\"Nom\"\n          autoCapitalize=\"words\"\n          placeholderTextColor=\"#1f1300\"\n          value={lastName}\n          onChangeText={(input) => setNewUser({ ...newUser, lastName: input })}\n        />\n      </InputContainer>\n      <InputContainer>\n        <Input\n          clearButtonMode=\"while-editing\"\n          autoCorrect={false}\n          placeholder=\"Pr√©nom\"\n          autoCapitalize=\"words\"\n          placeholderTextColor=\"#1f1300\"\n          value={firstName}\n          onChangeText={(input) => setNewUser({ ...newUser, firstName: input })}\n        />\n      </InputContainer>\n      <InputContainer>\n        <Input\n          clearButtonMode=\"while-editing\"\n          autoCorrect={false}\n          placeholder=\"Mail\"\n          keyboardType=\"email-address\"\n          autoCapitalize=\"none\"\n          placeholderTextColor=\"#1f1300\"\n          value={mail}\n          onChangeText={(input) => setNewUser({ ...newUser, mail: input })}\n        />\n      </InputContainer>\n      <SelectWrapper>\n        <TitleWrapper>Role de l'utilisateur</TitleWrapper>\n        <Picker\n          numberOfLines={2}\n          selectedValue={role_id}\n          onValueChange={(itemValue, itemIndex) =>\n            setNewUser({ ...newUser, role_id: itemValue })\n          }\n        >\n          <Picker.Item label=\"S√©lectionnez un role\" value={null} />\n          <Picker.Item label=\"Admin\" value={1} />\n          <Picker.Item label=\"Commercial\" value={2} />\n          <Picker.Item label=\"consultant\" value={3} />\n        </Picker>\n      </SelectWrapper>\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  background: #fdfdff;\n  width: 100%;\n  height: 100%;\n  border: 1px solid #1f1300;\n  border-radius: 30px;\n  padding: 20px;\n`;\nconst InputContainer = styled.View`\n  border-bottom-width: 1px;\n  border-bottom-color: #8c8787;\n  height: 12%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst Input = styled.TextInput`\n  font-size: 18px;\n  height: 70%;\n  width: 100%;\n`;\n\nconst TitleWrapper = styled.Text`\n  font-size: 22px;\n  text-align: center;\n`;\nconst SelectWrapper = styled.View`\n  margin-top: 10%;\n  padding: 0 10%;\n`;\n\nexport default UserCreation;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components/native';\nimport { Platform, Alert } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport UserCreation from '../../../components/user/UserCreation';\nimport FirstButton from '../../../components/styled-components/buttons/FirstButton';\n\nconst CreateAccount = () => {\n  const navigation = useNavigation();\n  const [newUser, setNewUser] = useState({\n    mail: null,\n    firstName: null,\n    password: null,\n    lastName: null,\n    role_id: null,\n  });\n  const [isClickable, setIsClickable] = useState(false);\n\n  useEffect(() => {\n    const handleButtonStatus = () => {\n      if (\n        (newUser.firstName &&\n          newUser.lastName &&\n          newUser.mail &&\n          newUser.role_id) !== null\n      ) {\n        setIsClickable(true);\n      } else {\n        setIsClickable(false);\n      }\n    };\n    handleButtonStatus();\n  }, [newUser.firstName, newUser.lastName, newUser.mail, newUser.role_id]);\n\n  // const handleCreateUser = async () => {\n  //   const response = await createUser(newUser);\n\n  //   const { errors, userDatas } = response;\n  //   if (errors) {\n  //     const { isCreated } = errors;\n  //     showAlertInfo(isCreated);\n  //   }\n  //   if (userDatas) {\n  //     const { isCreated } = userDatas;\n  //     showAlertInfo(isCreated);\n  //   }\n  // };\n\n  const showAlertInfo = (condition) => {\n    if (condition === true) {\n      return Alert.alert(\n        \"L'utilisateur a bien √©t√© cr√©√© ‚úÖ\",\n        \"L'utilisateur a √©t√© cr√©√© avec succ√®s, un mail avec ses indentifiants de connexion vient de lui √™tre envoy√©\",\n        [\n          {\n            text: 'Suivant',\n            onPress: () => navigation.navigate('Liste des utilisateurs'),\n            style: 'default',\n          },\n        ],\n      );\n    } else {\n      return Alert.alert(\n        'Le mail est d√©j√† utilis√© ‚ùå',\n        \"Merci d'essayer √† nouveau avec un mail qui n'est pas encore utilis√©\",\n        [\n          {\n            text: 'Cancel',\n            onPress: () => setNewUser({ ...newUser, mail: null }),\n            style: 'default',\n          },\n        ],\n      );\n    }\n  };\n\n  return (\n    <Main behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n      <FormContainer>\n        <UserCreation newUser={newUser} setNewUser={setNewUser} />\n      </FormContainer>\n      <ButtonContainer>\n        <FirstButton\n          text=\"Cr√©er\"\n          isClickable={isClickable}\n          // action={handleCreateUser}\n        />\n      </ButtonContainer>\n    </Main>\n  );\n};\n\nconst Main = styled.KeyboardAvoidingView`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  background: #eeeff5;\n`;\nconst FormContainer = styled.View`\n  width: 80%;\n  height: 70%;\n`;\nconst ButtonContainer = styled.View`\n  margin-top: 10%;\n  width: 50%;\n  height: 8%;\n`;\n\nexport default CreateAccount;\n","// besoin d'un lien, titre, logo\nimport React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport styled from 'styled-components/native';\n\nconst FastAction = ({ title, link, logo }) => {\n  const navigation = useNavigation();\n\n  return (\n    <MainContainer\n      activeOpacity={0.6}\n      onPress={() => {\n        navigation.navigate(link);\n      }}\n    >\n      <IconContainer>\n        <Icon name={logo} size={30} color=\"rgba(8, 61, 119, 1)\" />\n      </IconContainer>\n      <Title>{title}</Title>\n    </MainContainer>\n  );\n};\n\nconst MainContainer = styled.TouchableOpacity`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background: #fdfdff;\n  padding: 10px;\n  margin-bottom: 5%;\n  border: 1px solid rgba(8, 61, 119, 1);\n  border-radius: 10px;\n`;\nconst IconContainer = styled.View`\n  width: 20%;\n  border: 1px solid rgba(8, 61, 119, 1);\n  padding: 2%;\n  display: flex;\n  align-items: center;\n  margin-bottom: 2%;\n  border-radius: 10px;\n`;\nconst Title = styled.Text`\n  font-size: 18px;\n  margin-left: 5%;\n`;\n\nexport default FastAction;\n","import React from 'react';\nimport FastAction from './FastAction';\n\nimport styled from 'styled-components/native';\n\nconst FastActionList = () => {\n  return (\n    <MainContainer>\n      <FastAction\n        title=\"Liste des devis\"\n        logo=\"th-list\"\n        link=\"Liste des devis\"\n      />\n      <FastAction title=\"Faire un devis\" logo=\"plus\" link=\"Cr√©ation de devis\" />\n    </MainContainer>\n  );\n};\n\nconst MainContainer = styled.View`\n  width: 90%;\n  display: flex;\n`;\n\nexport default FastActionList;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\n// import des composants\nimport FastActionList from '../../components/fastActionHome/FastActionList';\n\nconst Home = () => {\n  return (\n    <HomeContainer>\n      <FastActionContainer>\n        <Subtitle>Actions rapides</Subtitle>\n        <FastActionList />\n      </FastActionContainer>\n    </HomeContainer>\n  );\n};\n\nconst HomeContainer = styled.SafeAreaView`\n  backgroundcolor: '#EEEFF5';\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FastActionContainer = styled.View`\n  height: 60%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Subtitle = styled.Text`\n  align-self: flex-start;\n  font-size: 18px;\n  font-weight: 600;\n  margin: 2% 2%;\n`;\n\nexport default Home;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components/native';\n\nimport AccountInfos from '../../../components/account/AccountInfos';\nimport AccountParameterList from '../../../components/parameters/ParameterList';\nimport { UserContext } from '../../../context/UserContext';\n\nimport { PARAMETERS } from '../../../app/datas/accountParametersList';\n\nconst Account = () => {\n  const { user } = useContext(UserContext);\n\n  return (\n    <Main>\n      <AccountInfos user={user} />\n      <AccountParameterList parameters={PARAMETERS} />\n    </Main>\n  );\n};\n\nconst Main = styled.SafeAreaView`\n  background: #eeeff5;\n  height: 100%;\n`;\n\nexport default Account;\n","import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n// import Account from '../admin/Account/Account';\nimport Account from '../screens/admin/Account/Account';\n\nconst AccountStack = createNativeStackNavigator();\n\nconst AccountStackScreen = () => {\n  return (\n    <AccountStack.Navigator screenOptions={{ headerShown: false }}>\n      <AccountStack.Screen name=\"accountStack\" component={Account} />\n    </AccountStack.Navigator>\n  );\n};\n\nexport default AccountStackScreen;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\nconst LogoutButton = ({ onPress }) => {\n  return (\n    <Button onPress={onPress}>\n      <ButtonText>D√©connexion</ButtonText>\n      <Icon name=\"logout\" size={20} />\n    </Button>\n  );\n};\n\nconst Button = styled.TouchableOpacity`\n  background: #fdfdff;\n  padding: 15px;\n  border-radius: 30px;\n  margin-top: 5%;\n  width: 50%;\n  border: solid 1px black;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\nconst ButtonText = styled.Text`\n  font-size: 18px;\n  margin-right: 10px;\n  font-weight: 600;\n`;\n\nexport default LogoutButton;\n","export const PARAMETERS = [\n  {\n    id: 1,\n    title: 'Param√®tres des utilisateurs',\n    link: 'Liste des utilisateurs',\n    autorisedRole: 'admin',\n  },\n];\n","import React, { useContext } from 'react';\nimport styled from 'styled-components/native';\n\nimport ParameterList from '../../../components/parameters/ParameterList';\nimport LogoutButton from '../../../components/styled-components/buttons/LogoutButton';\nimport displayAlertError from '../../../helpers/Alert/errorAlert';\nimport { PARAMETERS } from '../../../app/datas/parametersList';\nimport { AuthContext } from '../../../context/AuthContext';\n\nconst Paramaters = () => {\n  const authContext = useContext(AuthContext);\n\n  const handleDeconnectUser = async () => {\n    try {\n      authContext.logout();\n    } catch (error) {\n      displayAlertError(error);\n    }\n  };\n  return (\n    <Main>\n      <Title>Param√®tres de l'application</Title>\n      <ParameterList parameters={PARAMETERS} />\n      <LogoutButton onPress={handleDeconnectUser} />\n    </Main>\n  );\n};\n\nconst Main = styled.SafeAreaView`\n  background: #eeeff5;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Title = styled.Text`\n  font-size: 25px;\n  font-weight: 600;\n  margin-bottom: 30%;\n`;\n\nexport default Paramaters;\n","import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n// import des pages\nimport Parameters from '../screens/admin/parameters/Parameters';\n\nconst ParamatersStack = createNativeStackNavigator();\n\nconst ParametersStackScreen = () => {\n  return (\n    <ParamatersStack.Navigator screenOptions={{ headerShown: false }}>\n      <ParamatersStack.Screen name=\"parametersStack\" component={Parameters} />\n    </ParamatersStack.Navigator>\n  );\n};\n\nexport default ParametersStackScreen;\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport Home from '../../screens/admin/Home';\nimport AccountStackScreen from '../../helpers/AccountStackScreen';\nimport ParametersStackScreen from '../../helpers/ParametersStackScreen';\n\nconst Tab = createBottomTabNavigator();\n\nconst BottomNavbar = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        headerShown: true,\n        headerStyle: {\n          backgroundColor: '#083D77',\n        },\n        headerTintColor: '#EFEFEF',\n        // eslint-disable-next-line react/no-unstable-nested-components\n        tabBarIcon: ({ color, size }) => {\n          const iconName = {\n            Accueil: 'home',\n            Notifications: 'bell',\n            Compte: 'user',\n            Param√®tres: 'gear',\n          };\n          return <Icon name={iconName[route.name]} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#EFEFEF',\n        tabBarStyle: {\n          backgroundColor: '#083D77',\n          paddingTop: 10,\n        },\n        tabBarInactiveTintColor: '#486381',\n      })}\n    >\n      <Tab.Screen\n        name=\"Accueil\"\n        component={Home}\n        options={{\n          title: 'App Devis',\n          tabBarLabel: 'Accueil',\n        }}\n      />\n      <Tab.Screen name=\"Compte\" component={AccountStackScreen} />\n      <Tab.Screen name=\"Param√®tres\" component={ParametersStackScreen} />\n    </Tab.Navigator>\n  );\n};\n\nexport default BottomNavbar;\n","import React, { useContext, useEffect } from 'react';\nimport { StatusBar } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n// import de la page de connexion\nimport LoginStackScreen from './helpers/LoginStackScreen';\n\n// import des diff√©rentes stack de navigation\n// Pages situ√©es sur l'accueil de l'application\nimport EstimateCreation from './screens/admin/estimates/EstimateCreation';\nimport EstimateList from './screens/admin/estimates/EstimateList';\n\n// Pages de gestion des diff√©rents param√®tres\nimport AccountListPage from './screens/admin/parameters/AccountListPage';\nimport AccountAdminView from './screens/admin/parameters/AccountAdminView';\nimport UpdateMail from './screens/admin/Account/UpdateMail';\nimport UpdatePassword from './screens/admin/Account/UpdatePassword';\nimport displayAlertError from './helpers/Alert/errorAlert';\n\n// Pages de cr√©ation de contenu\nimport CreateAccount from './screens/admin/Account/CreateAccount';\n\n// context\nimport { AuthContext } from './context/AuthContext';\nimport { UserContext } from './context/UserContext';\nimport axios from './helpers/api/axios.config';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport BottomNavBar from './components/navBar/BottomNavbar';\n\nconst Stack = createNativeStackNavigator();\n\nconst AppContainer = () => {\n  const authContext = useContext(AuthContext);\n  const { user, setUser } = useContext(UserContext);\n\n  const checkConnection = async () => {\n    try {\n      const value = await AsyncStorage.getItem('@storage_Key');\n      const jwt = JSON.parse(value);\n\n      authContext.setAuthState({\n        accessToken: jwt.accessToken || null,\n        refreshToken: jwt.refreshToken || null,\n        authenticated: jwt.authenticated !== null,\n      });\n    } catch (error) {\n      authContext.setAuthState({\n        accessToken: null,\n        refreshToken: null,\n        authenticated: false,\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (!authContext.authState.authenticated) {\n      checkConnection();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <NavigationContainer>\n      <StatusBar barStyle=\"light-content\" />\n      {authContext.authState.authenticated ? (\n        <Stack.Navigator\n          screenOptions={{\n            headerShown: false,\n            headerStyle: {\n              backgroundColor: '#083D77',\n            },\n            headerTintColor: '#EFEFEF',\n          }}\n        >\n          <Stack.Screen name=\"App devis\" component={BottomNavBar} />\n          <Stack.Screen\n            name=\"Cr√©ation de devis\"\n            component={EstimateCreation}\n            options={{\n              headerShown: true,\n            }}\n          />\n          <Stack.Screen\n            name=\"Liste des devis\"\n            component={EstimateList}\n            options={{\n              headerShown: true,\n            }}\n          />\n\n          <Stack.Screen\n            name=\"Liste des utilisateurs\"\n            component={AccountListPage}\n            options={{ headerShown: true }}\n          />\n          <Stack.Screen\n            name=\"Utilisateur admin view\"\n            component={AccountAdminView}\n            options={{ headerShown: true, title: '' }}\n          />\n          <Stack.Screen\n            name=\"Changement du mail\"\n            component={UpdateMail}\n            options={{\n              headerShown: true,\n              title: '',\n            }}\n          />\n          <Stack.Screen\n            name=\"Changement du mot de passe\"\n            component={UpdatePassword}\n            options={{\n              headerShown: true,\n              title: '',\n            }}\n          />\n          <Stack.Screen\n            name=\"Cr√©ation utilisateur\"\n            component={CreateAccount}\n            options={{\n              headerShown: true,\n              title: '',\n            }}\n          />\n        </Stack.Navigator>\n      ) : (\n        <LoginStackScreen />\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default AppContainer;\n","import React from 'react';\nimport AppContainer from './AppContainer';\n\n// import different context\nimport { AuthProvider } from './context/AuthContext';\nimport { UserProvider } from './context/UserContext';\nimport { AxiosProvider } from './context/AxiosContext';\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <AxiosProvider>\n        <UserProvider>\n          <AppContainer />\n        </UserProvider>\n      </AxiosProvider>\n    </AuthProvider>\n  );\n}\n"],"sourceRoot":""}