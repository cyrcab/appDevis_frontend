{"version":3,"sources":["helpers/Alert/errorAlert.js","context/AuthContext.js","context/UserContext.js","context/AxiosContext.js","screens/admin/Login.js","screens/admin/ResetPass.js","helpers/LoginStackScreen.js","components/styled-components/buttons/AddButton.js","components/styled-components/buttons/DuoButton.js","components/option/OptionRender.js","components/option/OptionList.js","components/pack/PackRender.js","components/pack/PackList.js","components/styled-components/buttons/FormChoice.js","components/estimate/EstimateForm.js","components/styled-components/buttons/EstimateButton.js","screens/admin/estimates/EstimateCreation.js","components/estimate/EstimatesInfos.js","components/estimate/RenderEstimateInList.js","components/styled-components/SearchBar.js","screens/admin/estimates/EstimateList.js","components/parameters/RenderUsersInList.js","components/parameters/UserList.js","screens/admin/parameters/AccountListPage.js","components/account/AccountInfos.js","components/account/ItemInfos.js","components/parameters/ParameterList.js","components/styled-components/buttons/DeleteButton.js","app/datas/accountParametersList.js","screens/admin/parameters/AccountAdminView.js","components/styled-components/buttons/FirstButton.js","screens/admin/Account/UpdateMail.js","screens/admin/Account/UpdatePassword.js","components/user/UserCreation.js","screens/admin/Account/CreateAccount.js","components/fastActionHome/FastAction.js","components/fastActionHome/FastActionList.js","screens/admin/Home.js","screens/admin/Account/Account.js","helpers/AccountStackScreen.js","components/styled-components/buttons/LogoutButton.js","app/datas/parametersList.js","screens/admin/parameters/Parameters.js","helpers/ParametersStackScreen.js","components/navBar/BottomNavbar.js","AppContainer.js","App.js"],"names":["displayAlertError","error","Alert","alert","text","onPress","style","AuthContext","createContext","Provider","AuthProvider","children","useState","accessToken","refreshToken","authenticated","authState","setAuthState","value","logout","a","async","AsyncStorage","removeItem","getAccessToken","UserContext","UserProvider","id","firstName","lastName","mail","role_id","user","setUser","AxiosContext","AxiosProvider","authContext","useContext","authAxios","axios","create","baseURL","publicAxios","interceptors","request","use","config","headers","Authorization","Promise","reject","createAuthRefreshInterceptor","failedRequest","options","method","data","url","then","tokenRefreshResponse","response","authorization","setItem","JSON","stringify","user_id","resolve","catch","e","styles","StyleSheet","main","flex","backgroundColor","header","padding","title","fontSize","textAlign","marginVertical","textInput","marginBottom","fontWeight","input","borderWidth","borderColor","borderRadius","mdpInput","marginTop","inputContainer","paddingHorizontal","resetPass","button","buttonContainer","textButton","color","errorText","Login","navigation","setMail","password","setPassword","errors","setErrors","SafeAreaView","StatusBar","barStyle","View","Text","TextInput","onChangeText","autoCapitalize","clearButtonMode","textContentType","keyboardType","length","some","errorCode","filter","el","message","secureTextEntry","inputBottom","TouchableOpacity","navigate","concat","post","connection","userConnected","justifyContent","buttonText","buttonContaier","textValidation","ResetPass","emailToReset","setEmailToReset","isMailSend","setIsMailSend","LoginStack","createNativeStackNavigator","LoginStackScreen","Navigator","screenOptions","headerShown","headerStyle","headerTintColor","Screen","name","component","Button","styled","ButtonText","AddButton","action","size","Main","LeftButton","TextLeft","RightButton","props","isClickable","TextRight","DuoButton","textLeft","textRight","actionLeft","actionRight","righIsClickable","activeOpacity","CrossContainer","InputName","InputPrice","PriceWrapper","PriceContainer","OptionRender","option","setOptionList","optionList","setAddButtonIsPressed","packId","content","price_ht","price_ttc","pack_id","newOption","setNewOption","delete","res","optionDeleted","placeholder","put","parseFloat","optionUpdated","err","console","Title","ListContainer","OptionList","pack","addButtonIsPressed","useEffect","get","map","Header","TitleContainer","TrashContainer","OptionContainer","PackRender","setList","list","isVisible","setIsVisible","packDeleted","Input","ButtonContainer","BoxConfirm","PackList","packName","setPackName","newPack","isActive","FormChoice","leftIsActive","setLeftIsActive","rightIsActive","setRightIsActive","isFocus","EstimateInfos","InputContainer","Label","DisplayInfos","IconContainer","EstimateForm","formStyle","customer","setCustomer","setInput","setIsFocus","isOpen","setIsOpen","firstname","lastname","phone","company","Object","entries","key","onFocus","onEndEditing","isActif","EstimateButton","ScrollView","ContentWrapper","FormContainer","ButtonWrapper","AnswerListWrapper","TitleList","ActionButton","FileCreation","route","formToDisplay","setFormToDisplay","generateButton","setGenerateButton","packList","setPackList","type","params","file","reduction","connect","setFile","displayButtons","setDisplayButtons","setAction","fileToUpdate","obj","parse","newCustomer","customer_id","price","ChevronContainer","InfosContainer","TextTitle","DeleteButtonContainer","Body","EstimatesInfos","estimateList","setEstimateList","useNavigation","fileInfoOpen","setFileInfoOpen","deletedFile","WebBrowser","RenderEstimateInList","i","InputSearch","SearchBar","setValue","NavigationText","NoEstimateContainer","ButtonToNavigate","TextContainer","SearchContainer","FilterContainer","EstimateList","searchedWord","setSearchedWord","fetchData","useCallback","estimate","includes","toLowerCase","toUpperCase","IconWrapper","InfoName","EstimateNumber","Role","InfosSection","Params","RenderUsersInList","iconName","Name","_count","Estimate","push","ListWrapper","InfosText","UserList","elems","undefined","FlatList","renderItem","item","keyExtractor","horizontal","SearchBarWrapper","AccountListPage","userList","setUserList","InfoContainer","TextName","AccountInfos","roleName","nameToDisplay","Content","TouchableWrapper","ItemInfos","link","autorisedRole","ParameterList","parameters","DeleteButton","PARAMETERS","AccountAdminView","colorActive","colorInactive","FirstButton","UpdateMail","isCorrect","isEnterMail","setIsEnterMail","newMail","setNewMail","newMailConfirmation","setNewMailConfirmation","isFocused","setIsFocused","marginForFocusedInput","log","areTheSame","setAreTheSame","editable","UpdatePassword","isEnterPass","setIsEnterPass","newPassword","setNewPassword","newPasswordConfirmation","setNewPasswordConfirmation","TitleWrapper","SelectWrapper","UserCreation","newUser","setNewUser","autoCorrect","placeholderTextColor","numberOfLines","selectedValue","onValueChange","itemValue","itemIndex","Item","label","KeyboardAvoidingView","CreateAccount","setIsClickable","behavior","Platform","OS","MainContainer","FastAction","logo","FastActionList","HomeContainer","FastActionContainer","Subtitle","Home","getItem","checkConnectedUser","Account","AccountStack","AccountStackScreen","LogoutButton","Paramaters","ParamatersStack","ParametersStackScreen","Parameters","Tab","createBottomTabNavigator","BottomNavbar","tabBarIcon","Accueil","Notifications","Compte","Param√®tres","tabBarActiveTintColor","tabBarStyle","paddingTop","tabBarInactiveTintColor","tabBarLabel","Stack","AppContainer","jwt","checkConnection","NavigationContainer","BottomNavBar","EstimateCreation","App"],"mappings":"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","file":"static/js/app.558ee87c.chunk.js","sourcesContent":["import { Alert, Platform } from 'react-native';\n\nconst displayAlertError = (error) => {\n  // if (Platform.OS !== 'android' || Platform.OS !== 'ios') {\n  //   console.log('web');\n  // }\n\n  return Alert.alert(\n    'Une erreur est survenue',\n    `Une erreur de type ${error}, l'action a √©t√© annul√©e`,\n    [\n      {\n        text: 'Ok',\n        onPress: () => {},\n        style: 'cancel',\n      },\n    ],\n  );\n};\n\nexport default displayAlertError;\n","import React, { createContext, useState } from 'react';\nimport displayAlertError from '../helpers/Alert/errorAlert';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst AuthContext = createContext(null);\nconst { Provider } = AuthContext;\n\nconst AuthProvider = ({ children }) => {\n  const [authState, setAuthState] = useState({\n    accessToken: null,\n    refreshToken: null,\n    authenticated: null,\n  });\n\n  const logout = async () => {\n    try {\n      await AsyncStorage.removeItem('@storage_Key');\n      setAuthState({\n        accessToken: null,\n        refreshToken: null,\n        authenticated: false,\n      });\n    } catch (error) {\n      displayAlertError(error);\n    }\n  };\n\n  const getAccessToken = () => {\n    return authState.accessToken;\n  };\n\n  return (\n    <Provider value={{ authState, setAuthState, logout, getAccessToken }}>\n      {children}\n    </Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n","import React, { createContext, useState } from 'react';\n\nconst UserContext = createContext();\nconst { Provider } = UserContext;\n\nconst UserProvider = ({ children }) => {\n  const [user, setUser] = useState({\n    id: null,\n    firstName: null,\n    lastName: null,\n    mail: null,\n    role_id: null,\n  });\n\n  return <Provider value={{ user, setUser }}>{children}</Provider>;\n};\n\nexport { UserContext, UserProvider };\n","import React, { createContext, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from './AuthContext';\nimport createAuthRefreshInterceptor from 'axios-auth-refresh';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst AxiosContext = createContext();\n\nconst { Provider } = AxiosContext;\n\nconst AxiosProvider = ({ children }) => {\n  const authContext = useContext(AuthContext);\n\n  const authAxios = axios.create({\n    baseURL: 'https://app-devis-test.herokuapp.com',\n  });\n\n  const publicAxios = axios.create({\n    baseURL: 'https://app-devis-test.herokuapp.com',\n  });\n\n  authAxios.interceptors.request.use(\n    (config) => {\n      if (!config.headers.Authorization) {\n        config.headers.Authorization = `Bearer ${authContext.getAccessToken()}`;\n      }\n\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    },\n  );\n\n  const refreshAuthLogic = (failedRequest) => {\n    const data = {\n      refreshToken: authContext.authState.refreshToken,\n    };\n\n    const options = {\n      method: 'POST',\n      data,\n      url: 'http://192.168.1.10:5001/refresh-token',\n    };\n\n    return axios(options)\n      .then(async (tokenRefreshResponse) => {\n        failedRequest.response.config.headers.authorization =\n          'Bearer ' + tokenRefreshResponse.data.accessToken;\n\n        authContext.setAuthState({\n          ...authContext.authState,\n          accessToken: tokenRefreshResponse.data.accessToken,\n        });\n\n        await AsyncStorage.setItem(\n          '@storage_Key',\n          JSON.stringify({\n            accessToken: tokenRefreshResponse.data.accessToken,\n            refreshToken: authContext.authState.refreshToken,\n            user_id: tokenRefreshResponse.data.user.id,\n          }),\n        );\n\n        return Promise.resolve();\n      })\n      .catch((e) => {\n        authContext.setAuthState({\n          accessToken: null,\n          refreshToken: null,\n          authenticated: false,\n        });\n      });\n  };\n\n  createAuthRefreshInterceptor(authAxios, refreshAuthLogic, {});\n\n  return <Provider value={{ authAxios, publicAxios }}>{children}</Provider>;\n};\n\nexport { AxiosContext, AxiosProvider };\n","import React, { useState, useContext } from 'react';\nimport { AuthContext } from '../../../appDevis_frontend/context/AuthContext';\nimport { UserContext } from '../../context/UserContext';\nimport { AxiosContext } from '../../context/AxiosContext';\n\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n  StatusBar,\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Login = ({ navigation }) => {\n  const [mail, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  const { setAuthState } = useContext(AuthContext);\n  const { user, setUser } = useContext(UserContext);\n  const { publicAxios } = useContext(AxiosContext);\n\n  const handleLoginUser = async () => {\n    try {\n      if (!mail) {\n        setErrors(\n          errors.concat({\n            errorCode: 2,\n            message: 'Merci de rentrer une adresse mail',\n          }),\n        );\n      }\n      if (!password) {\n        setErrors(\n          errors.concat({\n            errorCode: 3,\n            message: 'Merci de rentrer un mot de passe',\n          }),\n        );\n      }\n\n      const connection = await publicAxios.post('/signin', {\n        mail: mail,\n        password: password,\n      });\n\n      const {\n        accessToken,\n        refreshToken,\n        user: userConnected,\n      } = connection.data;\n\n      setUser({\n        ...user,\n        ...userConnected,\n      });\n\n      setAuthState({\n        accessToken,\n        refreshToken,\n        authenticated: true,\n      });\n\n      await AsyncStorage.setItem(\n        '@storage_Key',\n        JSON.stringify({\n          accessToken,\n          refreshToken,\n          user_id: userConnected.id,\n        }),\n      );\n    } catch (error) {\n      setAuthState({ authenticated: false });\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.main}>\n      <StatusBar barStyle=\"dark-content\" />\n      <View style={styles.header}>\n        <Text style={styles.title}>\n          Bonjour, Bienvenue sur l‚Äôapplication devis de Webgo\n        </Text>\n      </View>\n      <View style={styles.inputContainer}>\n        <Text style={styles.textInput}>Adresse mail</Text>\n        <TextInput\n          onChangeText={setMail}\n          value={mail}\n          autoCapitalize=\"none\"\n          clearButtonMode=\"while-editing\"\n          style={styles.input}\n          textContentType=\"emailAddress\"\n          keyboardType=\"email-address\"\n        />\n        {errors.length > 0 && errors.some((e) => e.errorCode === 2) ? (\n          <Text style={styles.errorText}>\n            {errors.filter((el) => el.errorCode === 2)[0].message}\n          </Text>\n        ) : null}\n      </View>\n      <View style={[styles.inputContainer, styles.mdpInput]}>\n        <Text style={styles.textInput}>Mot de passe</Text>\n        <TextInput\n          onChangeText={setPassword}\n          value={password}\n          textContentType=\"password\"\n          secureTextEntry={true}\n          clearButtonMode=\"while-editing\"\n          style={[styles.input, styles.inputBottom]}\n        />\n        {errors.length > 0 && errors.some((e) => e.errorCode === 3) ? (\n          <Text style={styles.errorText}>\n            {errors.filter((el) => el.errorCode === 3)[0].message}\n          </Text>\n        ) : null}\n      </View>\n      <TouchableOpacity onPress={() => navigation.navigate('Reset Password')}>\n        <Text style={styles.resetPass}>Mot de passe oubli√© ?</Text>\n      </TouchableOpacity>\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity style={styles.button} onPress={handleLoginUser}>\n          <Text style={styles.textButton}>Connexion</Text>\n        </TouchableOpacity>\n        {errors.length > 0 &&\n        errors.some((e) => e.errorCode !== 2 && e.errorCode !== 3) ? (\n          <Text style={styles.errorText}>{errors[0].message}</Text>\n        ) : null}\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: '#EEEFF5',\n  },\n  header: {\n    padding: 30,\n  },\n  title: {\n    fontSize: 30,\n    textAlign: 'center',\n    marginVertical: 50,\n  },\n\n  // style des inputs\n  textInput: {\n    fontSize: 18,\n    marginBottom: 10,\n    fontWeight: '600',\n  },\n  input: {\n    padding: 10,\n    fontSize: 20,\n    borderWidth: 2,\n    borderColor: 'black',\n    backgroundColor: 'white',\n    borderRadius: 10,\n  },\n  mdpInput: {\n    marginTop: 20,\n  },\n  inputContainer: {\n    paddingHorizontal: 30,\n  },\n\n  resetPass: {\n    textAlign: 'center',\n    marginVertical: 10,\n    fontWeight: '700',\n  },\n\n  // style du button\n  button: {\n    marginTop: 30,\n    backgroundColor: '#083D77',\n    borderRadius: 50,\n  },\n  buttonContainer: {\n    paddingHorizontal: 80,\n  },\n  textButton: {\n    fontSize: 20,\n    color: 'white',\n    padding: 20,\n    textAlign: 'center',\n    fontWeight: '600',\n  },\n\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n  },\n});\n\nexport default Login;\n","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n} from 'react-native';\n\nconst ResetPass = () => {\n  const [emailToReset, setEmailToReset] = useState('');\n  const [isMailSend, setIsMailSend] = useState(false);\n\n  return (\n    <SafeAreaView style={styles.main}>\n      <View style={styles.inputContainer}>\n        <Text style={styles.textInput}>Rentrez votre mail ici : </Text>\n        <TextInput\n          value={emailToReset}\n          style={styles.input}\n          onChangeText={setEmailToReset}\n          textContentType=\"emailAddress\"\n        />\n      </View>\n      <View style={styles.buttonContaier}>\n        <TouchableOpacity onPress={() => setIsMailSend(true)}>\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>Envoyer</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n\n      {isMailSend ? (\n        <Text style={styles.textValidation}>\n          Un lien pour r√©initialiser votre mot de passe vous a √©t√© envoy√©\n        </Text>\n      ) : null}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#EEEFF5',\n  },\n\n  // input style\n  textInput: {\n    marginBottom: 10,\n    fontSize: 18,\n  },\n  input: {\n    borderColor: 'black',\n    borderWidth: 2,\n    marginBottom: 10,\n    fontSize: 30,\n    padding: 5,\n    backgroundColor: 'white',\n    borderRadius: 10,\n  },\n  inputContainer: {\n    paddingHorizontal: 30,\n  },\n\n  // style bouton pour reset le mot de passe\n  button: {\n    backgroundColor: '#083D77',\n    padding: 20,\n    borderRadius: 50,\n    marginTop: 20,\n  },\n  buttonText: {\n    fontSize: 20,\n    color: 'white',\n    textAlign: 'center',\n  },\n  buttonContaier: {\n    paddingHorizontal: 60,\n  },\n\n  // text validation\n  textValidation: {\n    textAlign: 'center',\n    marginTop: 20,\n    padding: 10,\n    color: 'green',\n  },\n});\n\nexport default ResetPass;\n","import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n// import des pages\nimport Login from '../screens/admin/Login';\nimport ResetPass from '../screens/admin/ResetPass';\n\nconst LoginStack = createNativeStackNavigator();\nconst LoginStackScreen = () => {\n  return (\n    <LoginStack.Navigator\n      screenOptions={{\n        headerShown: false,\n        headerStyle: {\n          backgroundColor: '#083D77',\n        },\n        headerTintColor: '#EFEFEF',\n      }}\n    >\n      <LoginStack.Screen name=\"Login\" component={Login} />\n      <LoginStack.Screen\n        name=\"Reset Password\"\n        component={ResetPass}\n        options={{\n          headerShown: true,\n        }}\n      />\n    </LoginStack.Navigator>\n  );\n};\n\nexport default LoginStackScreen;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport Icon from 'react-native-vector-icons/AntDesign';\n\nconst AddButton = ({ text, action }) => {\n  return (\n    <Button onPress={action}>\n      <ButtonText>{text}</ButtonText>\n      <Icon name=\"plus\" size={25} color=\"rgba(31, 19, 0, 0.6)\" />\n    </Button>\n  );\n};\n\nconst Button = styled.TouchableOpacity`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  border: 1px solid rgba(31, 19, 0, 0.3);\n  padding: 10px 20px;\n  background: #fdfdff;\n`;\nconst ButtonText = styled.Text`\n  font-size: 20px;\n  font-weight: 500;\n  color: rgba(31, 19, 0, 0.6);\n`;\n\nexport default AddButton;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\nconst DuoButton = ({\n  textLeft,\n  textRight,\n  actionLeft,\n  actionRight,\n  righIsClickable,\n}) => {\n  return (\n    <Main>\n      <LeftButton onPress={actionLeft}>\n        <TextLeft>{textLeft}</TextLeft>\n      </LeftButton>\n      <RightButton\n        onPress={actionRight}\n        isClickable={righIsClickable}\n        activeOpacity={righIsClickable ? 0.2 : 1}\n      >\n        <TextRight isClickable={righIsClickable}>{textRight}</TextRight>\n      </RightButton>\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst LeftButton = styled.TouchableOpacity`\n  border: 1px solid #ff4d42;\n  width: 49%;\n  padding: 2%;\n  border-radius: 5px;\n`;\nconst TextLeft = styled.Text`\n  font-size: 18px;\n  text-align: center;\n  color: #ff4d42;\n  font-weight: 500;\n`;\nconst RightButton = styled.TouchableOpacity`\n  border: ${(props) =>\n    props.isClickable ? '1px solid #083d77' : '1px solid rgba(31, 19, 0, 0.3)'}\n  width: 49%;\n  padding: 2%;\n  border-radius: 5px;\n`;\nconst TextRight = styled.Text`\n  font-size: 18px;\n  text-align: center;\n  color: ${(props) => (props.isClickable ? '#083d77' : 'rgba(31, 19, 0, 0.3)')}\n  font-weight: 500;\n`;\n\nexport default DuoButton;\n","import React, { useContext, useState } from 'react';\nimport styled from 'styled-components/native';\n\nimport DuoButton from '../styled-components/buttons/DuoButton';\n\nimport Icon from 'react-native-vector-icons/Entypo';\n\nimport { UserContext } from '../../context/UserContext';\nimport { AxiosContext } from '../../context/AxiosContext';\n\nimport displayAlertError from '../../helpers/Alert/errorAlert';\n\nconst OptionRender = ({\n  option,\n  setOptionList,\n  optionList,\n  setAddButtonIsPressed,\n  packId,\n}) => {\n  const { authAxios } = useContext(AxiosContext);\n  const { user } = useContext(UserContext);\n  const [newOption, setNewOption] = useState({\n    content: option ? option.content : null,\n    price_ht: option ? option.price_ht : null,\n    price_ttc: option ? option.price_ttc : null,\n    user_id: user.id,\n    pack_id: packId,\n  });\n\n  const handleDeleteOption = () => {\n    if (option) {\n      authAxios\n        .delete(`/api/options/${option.id}`)\n        .then((res) => res.data)\n        .then((optionDeleted) =>\n          setOptionList(optionList.filter((el) => el.id !== optionDeleted.id)),\n        );\n    } else {\n      setAddButtonIsPressed(false);\n    }\n  };\n\n  const handleAddOption = () => {\n    if (!newOption.content) {\n      displayAlertError(\"Merci de rentrer un nom d'option\");\n      return;\n    }\n    if (!newOption.price_ht) {\n      displayAlertError('Merci de rentrer un prix');\n      return;\n    }\n    authAxios\n      .post('/api/options', {\n        pack_id: newOption.pack_id,\n        price_ht: parseFloat(newOption.price_ht),\n        content: newOption.content,\n        user_id: newOption.user_id,\n      })\n      .then((res) => {\n        setOptionList(optionList.concat(res.data));\n        setAddButtonIsPressed(false);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleUpdateOption = () => {\n    authAxios\n      .put(`/api/options/${option.id}`, {\n        content: newOption.content,\n        price_ht: parseFloat(newOption.price_ht),\n        user_id: user.id,\n      })\n      .then((res) => res.data)\n      .then((optionUpdated) =>\n        setNewOption({ ...newOption, ...optionUpdated }),\n      );\n  };\n\n  return (\n    <Main>\n      <CrossContainer onPress={handleDeleteOption}>\n        <Icon name=\"cross\" size={30} color=\"rgba(31, 19, 0, 0.3)\" />\n      </CrossContainer>\n      <Text>Nom de l'option</Text>\n      <InputName\n        placeholder=\"Nom de l'option\"\n        onChangeText={(text) => setNewOption({ ...newOption, content: text })}\n        value={newOption.content}\n      />\n      <PriceWrapper>\n        {option && (\n          <PriceContainer>\n            <Text>Prix TTC</Text>\n            <InputPrice\n              placeholder=\"Prix TTC de l'option\"\n              value={newOption.price_ttc}\n            />\n          </PriceContainer>\n        )}\n        <PriceContainer>\n          <Text>Prix HT</Text>\n          <InputPrice\n            placeholder=\"Prix HT de l'option\"\n            onChangeText={(text) =>\n              setNewOption({ ...newOption, price_ht: text })\n            }\n            value={newOption.price_ht}\n          />\n        </PriceContainer>\n        <DuoButton\n          textLeft=\"Annuler\"\n          textRight={option ? 'Modifier' : 'Cr√©er'}\n          actionLeft={() => setAddButtonIsPressed(false)}\n          actionRight={() =>\n            option ? handleUpdateOption() : handleAddOption()\n          }\n          righIsClickable={true}\n        />\n      </PriceWrapper>\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  background: #fdfdff;\n  border: 1px solid rgba(31, 19, 0, 0.3);\n  padding: 10px 20px;\n  margin: 1% 0;\n`;\nconst CrossContainer = styled.TouchableOpacity`\n  align-self: flex-end;\n`;\nconst InputName = styled.TextInput`\n  margin: 2% 0;\n  font-size: 15px;\n  border: 1px solid #1f1300;\n  padding: 2% 5%;\n  font-weight: 600;\n  border-radius: 5px;\n`;\n\nconst InputPrice = styled.TextInput`\n  font-size: 15px;\n  border: 1px solid #1f1300;\n  border-radius: 5px;\n  padding: 2% 5%;\n`;\n\nconst Text = styled.Text`\n  margin-bottom: 5px;\n  font-weight: 600;\n  font-size: 15px;\n`;\nconst PriceWrapper = styled.View``;\nconst PriceContainer = styled.View`\n  margin: 2% 0;\n`;\n\nexport default OptionRender;\n","import React, { useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components/native';\nimport displayAlertError from '../../helpers/Alert/errorAlert';\nimport AddButton from '../styled-components/buttons/AddButton';\n\nimport OptionRender from './OptionRender';\n\nimport { AxiosContext } from '../../context/AxiosContext';\n\nconst OptionList = ({ pack }) => {\n  const { authAxios } = useContext(AxiosContext);\n  const [optionList, setOptionList] = useState([]);\n  const [addButtonIsPressed, setAddButtonIsPressed] = useState(false);\n\n  useEffect(() => {\n    authAxios\n      .get(`/api/packs/${pack.id}`)\n      .then((res) => res.data)\n      .then((data) => setOptionList(data.option))\n      .catch((err) => displayAlertError(err));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Main>\n      <Title>Liste des options</Title>\n      <ListContainer>\n        {optionList &&\n          optionList.map((el) => (\n            <OptionRender\n              key={el.id}\n              option={el}\n              packId={pack.id}\n              optionList={optionList}\n              setOptionList={setOptionList}\n              setAddButtonIsPressed={setAddButtonIsPressed}\n            />\n          ))}\n      </ListContainer>\n      {addButtonIsPressed ? (\n        <OptionRender\n          setAddButtonIsPressed={setAddButtonIsPressed}\n          optionList={optionList}\n          packId={pack.id}\n          setOptionList={setOptionList}\n        />\n      ) : (\n        <AddButton\n          text=\"Ajouter une option\"\n          action={() => setAddButtonIsPressed(true)}\n        />\n      )}\n    </Main>\n  );\n};\n\nconst Main = styled.View``;\nconst Title = styled.Text`\n  text-align: center;\n  font-size: 18px;\n`;\nconst ListContainer = styled.View``;\n\nexport default OptionList;\n","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components/native';\nimport Icon from 'react-native-vector-icons/Feather';\n\nimport displayAlertError from '../../helpers/Alert/errorAlert';\nimport OptionList from '../option/OptionList';\n\nimport { AxiosContext } from '../../context/AxiosContext';\n\nconst PackRender = ({ pack, setList, list }) => {\n  const { authAxios } = useContext(AxiosContext);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleDeletePack = () => {\n    authAxios\n      .delete(`/api/packs/${pack.id}`)\n      .then((res) => res.data)\n      .then((packDeleted) =>\n        setList(list.filter((el) => el.id !== packDeleted.id)),\n      )\n      .catch((err) => displayAlertError(err));\n  };\n\n  return (\n    <Main>\n      <Header>\n        <TitleContainer onPress={() => setIsVisible(!isVisible)}>\n          <Title>{pack.name}</Title>\n          <Icon name={isVisible ? 'chevron-up' : 'chevron-down'} size={25} />\n        </TitleContainer>\n        <TrashContainer onPress={handleDeletePack}>\n          <Icon name=\"trash\" size={25} color=\"red\" />\n        </TrashContainer>\n      </Header>\n      {isVisible ? (\n        <OptionContainer>\n          <OptionList pack={pack} />\n        </OptionContainer>\n      ) : null}\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  background: #fdfdff;\n  border: 1px solid #1f1300;\n  padding: 10px 20px;\n  margin: 1% 0;\n`;\nconst Header = styled.View`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst TitleContainer = styled.TouchableOpacity`\n  display: flex;\n  flex-direction: row;\n`;\nconst TrashContainer = styled.TouchableOpacity``;\nconst Title = styled.Text`\n  font-size: 20px;\n`;\nconst OptionContainer = styled.View``;\n\nexport default PackRender;\n","import React, { useContext, useState } from 'react';\nimport styled from 'styled-components/native';\nimport PackRender from './PackRender';\nimport Icon from 'react-native-vector-icons/AntDesign';\nimport displayAlertError from '../../helpers/Alert/errorAlert';\n\nimport { AxiosContext } from '../../context/AxiosContext';\nimport { UserContext } from '../../context/UserContext';\n\nimport AddButton from '../styled-components/buttons/AddButton';\n\nconst PackList = ({ list, setList }) => {\n  const { authAxios } = useContext(AxiosContext);\n  const { user } = useContext(UserContext);\n  const [addButtonIsPressed, setAddButtonIsPressed] = useState(false);\n  const [packName, setPackName] = useState(null);\n\n  const fetchPackCreation = () => {\n    if (packName.length === null) {\n      setAddButtonIsPressed(false);\n      return;\n    }\n\n    authAxios\n      .post('/api/packs', {\n        name: packName,\n        user_id: user.id,\n      })\n      .then((res) => res.data)\n      .then((newPack) => {\n        setList(list.concat(newPack));\n        setAddButtonIsPressed(false);\n        setPackName(null);\n      })\n      .catch((error) => displayAlertError(error));\n  };\n\n  return (\n    <ListContainer>\n      {list &&\n        list.map((el) => (\n          <PackRender pack={el} key={el.id} setList={setList} list={list} />\n        ))}\n      {addButtonIsPressed ? (\n        <ButtonContainer>\n          <Input onChangeText={(text) => setPackName(text)} />\n          <BoxConfirm onPress={fetchPackCreation}>\n            <Icon name=\"check\" size={30} />\n          </BoxConfirm>\n        </ButtonContainer>\n      ) : (\n        <AddButton\n          text=\"Ajouter un pack\"\n          action={() => {\n            setAddButtonIsPressed(true);\n          }}\n        />\n      )}\n    </ListContainer>\n  );\n};\n\nconst ListContainer = styled.View``;\nconst Input = styled.TextInput`\n  padding: 3%;\n  border: 1px solid black;\n  border-radius: 5px;\n  font-size: 18px;\n  width: 85%;\n`;\nconst ButtonContainer = styled.View`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n`;\nconst BoxConfirm = styled.TouchableOpacity`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 10%;\n  padding: 1%;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nexport default PackList;\n","import React, { useState } from 'react';\nimport styled from 'styled-components/native';\n\nconst FormChoice = ({ actionLeft, actionRight, textLeft, textRight }) => {\n  const [leftIsActive, setLeftIsActive] = useState(false);\n  const [rightIsActive, setRightIsActive] = useState(false);\n\n  return (\n    <ButtonContainer>\n      <Button\n        onPress={() => {\n          actionLeft();\n          setLeftIsActive(true);\n          setRightIsActive(false);\n        }}\n        isActive={leftIsActive}\n      >\n        <ButtonText isActive={leftIsActive}>{textLeft}</ButtonText>\n      </Button>\n      <Button\n        onPress={() => {\n          actionRight();\n          setRightIsActive(true);\n          setLeftIsActive(false);\n        }}\n        isActive={rightIsActive}\n      >\n        <ButtonText isActive={rightIsActive}>{textRight}</ButtonText>\n      </Button>\n    </ButtonContainer>\n  );\n};\n\nconst ButtonContainer = styled.View`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst Button = styled.TouchableOpacity`\n  width: 45%;\n  border: 1px solid black;\n  padding: 3%;\n  background: ${(props) => (props.isActive ? '#083D77' : '#EFEFEF')};\n  border-radius: 5px;\n`;\nconst ButtonText = styled.Text`\n  font-size: 18px;\n  text-align: center;\n  font-weight: 500;\n  color: ${(props) => (props.isActive ? '#EFEFEF' : '#1F1300')};\n`;\n\nexport default FormChoice;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\n\nimport Icon from 'react-native-vector-icons/Feather';\n\nconst EstimateForm = ({ formStyle, customer, setCustomer }) => {\n  const [input, setInput] = useState({});\n  const [isFocus, setIsFocus] = useState(false);\n  const [isOpen, setIsOpen] = useState(true);\n\n  useEffect(() => {\n    if (formStyle === 'ESTIMATE') {\n      setInput({\n        firstname: \"Pr√©nom de l'interlocuteur :\",\n        lastname: \"Nom de l'interlocuteur :\",\n        mail: \"Mail de l'interlocuteur :\",\n        phone: 'Num√©ro de t√©l√©phone : ',\n        company: \"Nom de l'entreprise :\",\n      });\n    } else {\n      setInput({\n        firstname: \"Pr√©nom de l'interlocuteur :\",\n        lastname: \"Nom de l'interlocuteur :\",\n        phone: 'Num√©ro de t√©l√©phone : ',\n        mail: \"Mail de l'interlocuteur :\",\n        company: \"Nom de l'entreprise :\",\n      });\n    }\n  }, [formStyle]);\n\n  return (\n    <Main isFocus={isFocus}>\n      <DisplayInfos onPress={() => setIsOpen(!isOpen)}>\n        <Text>Infos g√©n√©rales du devis</Text>\n        <IconContainer>\n          <Icon name={isOpen ? 'eye-off' : 'eye'} size={20} />\n        </IconContainer>\n      </DisplayInfos>\n      {isOpen ? (\n        <EstimateInfos>\n          {Object.entries(input).map(([key, value]) => {\n            return (\n              <InputContainer key={key}>\n                <Label>{value}</Label>\n                <Input\n                  onFocus={() => setIsFocus(true)}\n                  onEndEditing={() => setIsFocus(false)}\n                  value={customer[key]}\n                  onChangeText={(text) =>\n                    setCustomer({ ...customer, [key]: text })\n                  }\n                />\n              </InputContainer>\n            );\n          })}\n        </EstimateInfos>\n      ) : null}\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  border: 1px solid #1f1300;\n  padding: 5% 5%;\n  background: #fdfdff;\n  width: 100%;\n  border-radius: 5px;\n  margin-bottom: ${(props) => (props.isFocus ? '60%' : '0')};\n`;\nconst EstimateInfos = styled.View`\n  display: flex;\n  align-items: center;\n  margin-top: 10%;\n`;\n\nconst InputContainer = styled.View`\n  width: 100%;\n  padding: 3%;\n`;\nconst Input = styled.TextInput`\n  border-bottom-width: 1px;\n  border-bottom-color: #1f1300;\n  font-size: 18px;\n  padding: 2%;\n  margin-top: 1%;\n`;\nconst Label = styled.Text`\n  font-size: 18px;\n`;\nconst Text = styled.Text`\n  margin-right: 10%;\n  font-size: 18px;\n`;\nconst DisplayInfos = styled.TouchableOpacity`\n  display: flex;\n  flex-direction: row;\n  align-self: center;\n  align-items: center;\n`;\nconst IconContainer = styled.View``;\n\nexport default EstimateForm;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\nconst EstimateButton = ({ text, isActif, action }) => {\n  return (\n    <Main\n      isActif={isActif}\n      activeOpacity={isActif ? 0.2 : 1}\n      onPress={isActif ? action : null}\n    >\n      <Text isActif={isActif}>{text}</Text>\n    </Main>\n  );\n};\n\nconst Main = styled.TouchableOpacity`\n  padding: 10px 20px;\n  border: ${(props) =>\n    props.isActif\n      ? '2px solid rgba(8, 61, 119, 1)'\n      : '2px solid rgba(31, 19, 0, 0.3)'};\n  display: flex;\n  align-items: center;\n  border-radius: 5px;\n`;\nconst Text = styled.Text`\n  font-size: 20px;\n  font-weight: bold;\n  color: ${(props) =>\n    props.isActif\n      ? '2px solid rgba(8, 61, 119, 1)'\n      : '2px solid rgba(31, 19, 0, 0.3)'};\n`;\n\nexport default EstimateButton;\n","import React, { useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components/native';\n\nimport { UserContext } from '../../../context/UserContext';\n\nimport { AxiosContext } from '../../../context/AxiosContext';\n\nimport PackList from '../../../components/pack/PackList';\n\nimport FormChoice from '../../../components/styled-components/buttons/FormChoice';\nimport EstimateForm from '../../../components/estimate/EstimateForm';\n\nimport EstimateButton from '../../../components/styled-components/buttons/EstimateButton';\nimport displayAlertError from '../../../helpers/Alert/errorAlert';\n\nconst FileCreation = ({ route }) => {\n  const { authAxios } = useContext(AxiosContext);\n  const { user } = useContext(UserContext);\n\n  const [formToDisplay, setFormToDisplay] = useState(null);\n  const [generateButton, setGenerateButton] = useState(false);\n  const [packList, setPackList] = useState([]);\n  const [file, setFile] = useState({\n    type: route.params ? route.params.file.type : null,\n    user_id: user.id,\n    reduction: route.params ? route.params.file.reduction : null,\n    pack: {\n      connect: [],\n    },\n  });\n  const [customer, setCustomer] = useState({\n    firstname: null,\n    lastname: null,\n    company: null,\n    phone: null,\n    mail: null,\n  });\n  const [displayButtons, setDisplayButtons] = useState(false);\n  const [action, setAction] = useState('');\n\n  useEffect(() => {\n    if (route.params) {\n      const { file: fileToUpdate } = route.params;\n      setFile(fileToUpdate);\n      setPackList(fileToUpdate.pack);\n      setFormToDisplay(fileToUpdate.type === 'estimate' ? 'ESTIMATE' : 'BILL');\n      setCustomer(fileToUpdate.customer);\n      setDisplayButtons(true);\n      setAction('UPDATE');\n    } else {\n      setAction('CREATE');\n    }\n  }, [route.params]);\n\n  useEffect(() => {\n    const json = packList.map((el) => `{\"id\" : ${el.id}}`);\n    const obj = json.map((el) => JSON.parse(el));\n    setFile({ ...file, pack: { connect: obj } });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [packList]);\n\n  useEffect(() => {\n    if (\n      action === 'CREATE' &&\n      customer.firstname !== null &&\n      customer.lastname !== null &&\n      customer.company !== null &&\n      customer.phone !== null &&\n      customer.mail !== null &&\n      packList.length > 0\n    ) {\n      setGenerateButton(true);\n    } else if (action === 'UPDATE') {\n      setGenerateButton(true);\n    }\n  }, [\n    action,\n    customer.company,\n    customer.firstname,\n    customer.lastname,\n    customer.mail,\n    customer.phone,\n    packList.length,\n  ]);\n\n  const handleCreateFile = async () => {\n    try {\n      const newCustomer = await authAxios.post('/api/customers', customer);\n      if (newCustomer.data) {\n        const newFile = await authAxios.post('/api/files', {\n          ...file,\n          customer_id: newCustomer.data.id,\n        });\n\n        if (!newFile) {\n          displayAlertError(\n            \"Une erreur s'est produite lors de la cr√©ation du fichier\",\n          );\n        }\n      } else {\n        displayAlertError(\"Une erreur s'est produite \");\n      }\n    } catch (error) {\n      displayAlertError(error);\n    }\n    setDisplayButtons(true);\n  };\n\n  const handleUpdateEstimate = async () => {\n    try {\n      const estimateUpdated = authAxios.put(\n        `api/files/${route.params.file.id}`,\n        {\n          ...file,\n          reduction: parseFloat(file.reduction),\n        },\n      );\n      if (estimateUpdated) {\n        setDisplayButtons(true);\n      } else {\n        displayAlertError('Une erreur est survenue, merci de r√©essayer');\n      }\n    } catch (error) {\n      displayAlertError(error);\n    }\n  };\n\n  return (\n    <Main>\n      <ContentWrapper>\n        <ButtonWrapper>\n          <FormChoice\n            textLeft=\"Devis\"\n            textRight=\"Facture\"\n            actionLeft={() => {\n              setFormToDisplay('ESTIMATE');\n              setFile({ ...file, type: 'estimate' });\n            }}\n            actionRight={() => {\n              setFormToDisplay('BILL');\n              setFile({ ...file, type: 'bill' });\n            }}\n          />\n        </ButtonWrapper>\n        <FormContainer>\n          {formToDisplay && (\n            <EstimateForm\n              formStyle={formToDisplay}\n              customer={customer}\n              setCustomer={setCustomer}\n            />\n          )}\n        </FormContainer>\n        <AnswerListWrapper>\n          <TitleList>Liste des pack</TitleList>\n          <PackList list={packList} setList={setPackList} />\n        </AnswerListWrapper>\n        <InputContainer>\n          <Input\n            placeholder=\"Ajouter une r√©duction\"\n            onChangeText={(text) => setFile({ ...file, reduction: text })}\n            value={file.reduction !== 0 ? file.reduction : null}\n          />\n        </InputContainer>\n      </ContentWrapper>\n      <ButtonContainer>\n        <EstimateButton\n          text={action === 'CREATE' ? 'Cr√©er' : 'Modifier'}\n          isActif={generateButton}\n          action={action === 'CREATE' ? handleCreateFile : handleUpdateEstimate}\n        />\n      </ButtonContainer>\n      {displayButtons && !file.price ? (\n        <ActionButton>\n          <EstimateButton text=\"Partager\" isActif />\n          <EstimateButton text=\"Voir\" isActif />\n        </ActionButton>\n      ) : null}\n    </Main>\n  );\n};\n\nconst Main = styled.ScrollView`\n  background: #eeeff5;\n  height: 100%;\n`;\nconst ContentWrapper = styled.View`\n  display: flex;\n  align-items: center;\n`;\nconst FormContainer = styled.View`\n  width: 90%;\n  margin-top: 10%;\n`;\nconst ButtonWrapper = styled.View`\n  margin-top: 5%;\n  width: 90%;\n`;\nconst AnswerListWrapper = styled.View`\n  width: 90%;\n  margin-top: 5%;\n`;\nconst TitleList = styled.Text`\n  font-size: 18px;\n  font-weight: bold;\n  margin-bottom: 3%;\n  text-align: center;\n`;\nconst ButtonContainer = styled.View`\n  width: 90%;\n  margin: 5% 0 15% 0;\n  align-self: center;\n`;\nconst ActionButton = styled.View`\n  display: flex;\n  flex-direction: row;\n  width: 80%;\n  align-self: center;\n  justify-content: space-between;\n  margin-bottom: 10%;\n`;\nconst InputContainer = styled.View`\n  width: 90%;\n`;\nconst Input = styled.TextInput`\n  margin: 2% 0;\n  font-size: 15px;\n  border: 1px solid rgba(31, 19, 0, 0.3);\n  background: #fdfdff;\n  padding: 2% 5%;\n  font-weight: 600;\n  border-radius: 5px;\n`;\n\nexport default FileCreation;\n","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components/native';\nimport { useNavigation } from '@react-navigation/native';\nimport * as WebBrowser from 'expo-web-browser';\n\nimport Icon from 'react-native-vector-icons/AntDesign';\n\nimport { AxiosContext } from '../../context/AxiosContext';\n\nconst EstimatesInfos = ({ file, estimateList, setEstimateList }) => {\n  const { authAxios } = useContext(AxiosContext);\n  const navigation = useNavigation();\n  const { customer } = file;\n  const [fileInfoOpen, setFileInfoOpen] = useState(false);\n\n  const handleDeleteEstimate = () => {\n    authAxios\n      .delete(`/api/files/${file.id}`)\n      .then((res) => res.data)\n      .then((deletedFile) =>\n        setEstimateList(estimateList.filter((el) => el.id !== deletedFile.id)),\n      )\n      .catch((err) => console.error(err));\n  };\n\n  const handleSeePdf = async () => {\n    await authAxios.post('/upload-pdf', file);\n    await WebBrowser.openBrowserAsync(\n      'https://app-devis-test.herokuapp.com/test.pdf',\n    );\n  };\n\n  return (\n    <Main>\n      <Header>\n        <TitleContainer onPress={() => setFileInfoOpen(!fileInfoOpen)}>\n          <Text>{customer.company} </Text>\n          <ChevronContainer>\n            {fileInfoOpen ? (\n              <Icon name=\"down\" size={20} />\n            ) : (\n              <Icon name=\"right\" size={20} />\n            )}\n          </ChevronContainer>\n        </TitleContainer>\n        <DeleteButtonContainer onPress={handleDeleteEstimate}>\n          <Icon name=\"delete\" size={20} />\n        </DeleteButtonContainer>\n      </Header>\n      {fileInfoOpen && (\n        <Body>\n          <InfosContainer>\n            <TextTitle>Type :</TextTitle>\n            <Text>{file.type === 'estimate' ? 'Devis' : 'Facture'}</Text>\n          </InfosContainer>\n          <InfosContainer>\n            <TextTitle>Prix total :</TextTitle>\n            <Text>{file.price_ht} ‚Ç¨ / HT</Text>\n            <TextTitle>Nom du client :</TextTitle>\n            <Text>{customer.firstname + ' ' + customer.lastname}</Text>\n          </InfosContainer>\n          <InfosContainer>\n            <TextTitle>Mail du client :</TextTitle>\n            <Text>{customer.mail}</Text>\n          </InfosContainer>\n          <InfosContainer>\n            <TextTitle>Num√©ro du client :</TextTitle>\n            <Text>{customer.phone}</Text>\n          </InfosContainer>\n          <ButtonWrapper>\n            <Button\n              onPress={() =>\n                navigation.navigate('Cr√©ation de devis', {\n                  file: file,\n                })\n              }\n            >\n              <ButtonText>Modifier</ButtonText>\n            </Button>\n            <Button onPress={handleSeePdf}>\n              <ButtonText>Voir</ButtonText>\n            </Button>\n            <Button>\n              <ButtonText>Envoyer</ButtonText>\n            </Button>\n          </ButtonWrapper>\n        </Body>\n      )}\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  box-shadow: 0px 0px 2px rgba(255, 255, 255, 1);\n`;\nconst Header = styled.View`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5% 3%;\n  background: #f092ff;\n`;\nconst TitleContainer = styled.TouchableOpacity`\n  width: 50%;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst ChevronContainer = styled.View``;\nconst Text = styled.Text`\n  font-size: 18px;\n  font-weight: 400;\n`;\nconst InfosContainer = styled.View`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-width: 1px;\n  padding: 10px 0;\n  border-bottom-color: rgba(31, 19, 0, 0.3);\n`;\nconst TextTitle = styled.Text`\n  font-size: 18px;\n  font-weight: 600;\n`;\nconst DeleteButtonContainer = styled.TouchableOpacity`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Body = styled.View`\n  background: #fdfdff;\n  padding: 5% 3%;\n  border-bottom-width: 1px;\n  border-bottom-color: rgba(31, 19, 0, 0.3);\n`;\n\nconst ButtonWrapper = styled.View`\n  display: flex;\n  margin-top: 2%;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nconst Button = styled.TouchableOpacity`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30%;\n  border: 1px solid #083d77;\n  padding: 3%;\n  border-radius: 3px;\n`;\nconst ButtonText = styled.Text`\n  font-size: 16px;\n  font-weight: 600;\n  color: #083d77;\n`;\n\nexport default EstimatesInfos;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\nimport EstimatesInfos from './EstimatesInfos';\n\nconst RenderEstimateInList = ({ estimateList, setEstimateList }) => {\n  return (\n    <Main>\n      {estimateList.length > 0\n        ? estimateList.map((el, i) => (\n            <EstimatesInfos\n              key={i}\n              file={el}\n              setEstimateList={setEstimateList}\n              estimateList={estimateList}\n            />\n          ))\n        : null}\n    </Main>\n  );\n};\n\nconst Main = styled.View``;\n\nexport default RenderEstimateInList;\n","import React from 'react';\nimport styled from 'styled-components/native';\nstyled;\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst SearchBar = ({ value, setValue }) => {\n  return (\n    <Main>\n      <InputSearch\n        placeholder=\"Rechercher\"\n        value={value}\n        onChangeText={setValue}\n      />\n      <IconContainer>\n        <Icon name=\"search\" size={30} color=\"#8c8787\" />\n      </IconContainer>\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  background: #fdfdff;\n  border: 1px solid black;\n  border-radius: 30px;\n  padding: 10px 20px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n`;\n\nconst InputSearch = styled.TextInput`\n  font-size: 18px;\n  width: 90%;\n`;\nconst IconContainer = styled.View`\n  width: 10%;\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport default SearchBar;\n","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport styled from 'styled-components/native';\nimport { useNavigation } from '@react-navigation/native';\nimport { AxiosContext } from '../../../context/AxiosContext';\n\nimport RenderEstimateInList from '../../../components/estimate/RenderEstimateInList';\nimport SearchBar from '../../../components/styled-components/SearchBar';\n\nconst EstimateList = () => {\n  const navigation = useNavigation();\n  const { authAxios } = useContext(AxiosContext);\n  const [estimateList, setEstimateList] = useState([]);\n  const [searchedWord, setSearchedWord] = useState('');\n\n  const fetchData = useCallback(async () => {\n    await authAxios\n      .get('/api/files')\n      .then((res) => res.data)\n      .then((estimate) => {\n        if (searchedWord !== '') {\n          setEstimateList(\n            estimate.filter(\n              (e) =>\n                e.customer.company.includes(searchedWord.toLowerCase()) ||\n                e.customer.company.includes(searchedWord.toUpperCase()),\n            ),\n          );\n        } else {\n          setEstimateList(estimate);\n        }\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchedWord]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return (\n    <Main>\n      <ListContainer>\n        <FilterContainer>\n          <SearchContainer>\n            {/* recherche par le nom de la bo√Æte */}\n            <SearchBar value={searchedWord} setValue={setSearchedWord} />\n          </SearchContainer>\n        </FilterContainer>\n        {estimateList ? (\n          <RenderEstimateInList\n            estimateList={estimateList}\n            setEstimateList={setEstimateList}\n          />\n        ) : (\n          <NoEstimateContainer>\n            <TextContainer>\n              <Text>Il n'y a pas encore de devis effectu√©s</Text>\n            </TextContainer>\n            <ButtonToNavigate\n              onPress={() => navigation.navigate('Cr√©ation de devis')}\n            >\n              <NavigationText>Faire un devis</NavigationText>\n            </ButtonToNavigate>\n          </NoEstimateContainer>\n        )}\n      </ListContainer>\n    </Main>\n  );\n};\n\nconst Main = styled.SafeAreaView``;\nconst ListContainer = styled.ScrollView``;\nconst Text = styled.Text`\n  font-size: 18px;\n`;\nconst NavigationText = styled.Text`\n  font-size: 20px;\n  font-weight: 500;\n  color: #083d77;\n`;\nconst NoEstimateContainer = styled.View`\n  display: flex;\n  align-items: center;\n`;\nconst ButtonToNavigate = styled.TouchableOpacity`\n  margin-top: 3%;\n`;\nconst TextContainer = styled.View`\n  display: flex;\n  align-items: center;\n  margin-top: 10%;\n`;\nconst SearchContainer = styled.View`\n  width: 90%;\n`;\nconst FilterContainer = styled.View`\n  width: 100%;\n  ${'' /* height: 10%; */}\n  margin: 5% 0;\n  display: flex;\n  align-items: center;\n`;\n\nexport default EstimateList;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { useNavigation } from '@react-navigation/native';\n\nconst RenderUsersInList = ({ user, iconName }) => {\n  const navigation = useNavigation();\n\n  return (\n    <Main>\n      <IconWrapper>\n        <Icon name={iconName} size={50} />\n      </IconWrapper>\n      <InfosSection>\n        <InfoName>\n          {user.firstName} {user.lastName}\n        </InfoName>\n        <Role>{user.Role.Name}</Role>\n        <EstimateNumber>\n          {user._count.Estimate === 0\n            ? 'Pas encore de devis effectu√©'\n            : `${user._count.Estimate} devis effectu√©s`}\n        </EstimateNumber>\n      </InfosSection>\n      <Params\n        onPress={() =>\n          navigation.push('Utilisateur admin view', {\n            user: user,\n          })\n        }\n      >\n        <Icon name=\"ellipsis-h\" size={30} />\n      </Params>\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 10px;\n  border-bottom-width: 1px;\n`;\nconst IconWrapper = styled.View`\n  width: 20%;\n`;\nconst InfoName = styled.Text`\n  align-self: flex-start;\n  font-weight: 600;\n`;\nconst EstimateNumber = styled.Text`\n  color: #ff9b42;\n  font-weight: 600;\n`;\nconst Role = styled.Text`\n  align-self: flex-start;\n  color: #8c8787;\n`;\nconst InfosSection = styled.View`\n  width: 70%;\n  display: flex;\n`;\nconst Params = styled.TouchableOpacity`\n  width: 30%;\n`;\n\nexport default RenderUsersInList;\n","import React from 'react';\nimport { FlatList } from 'react-native';\nimport styled from 'styled-components/native';\n\nimport RenderUsersInList from './RenderUsersInList';\n\nconst UserList = ({ elems }) => {\n  const renderItem = ({ item }) => {\n    return <RenderUsersInList user={item} iconName=\"user\" />;\n  };\n\n  if (elems[0] !== undefined) {\n    return (\n      <ListWrapper>\n        <FlatList\n          data={elems}\n          renderItem={renderItem}\n          keyExtractor={(item) => item.id}\n          horizontal=\"false\"\n        />\n      </ListWrapper>\n    );\n  }\n\n  return <InfosText>Il n'y a pas de donn√©es √† afficher</InfosText>;\n};\n\nconst ListWrapper = styled.View`\n  border-top-width: 1px;\n`;\nconst InfosText = styled.Text``;\n\nexport default UserList;\n","import React, { useEffect, useState, useContext } from 'react';\nimport styled from 'styled-components/native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { AxiosContext } from '../../../context/AxiosContext';\n\nimport UserList from '../../../components/parameters/UserList';\nimport AddButton from '../../../components/styled-components/buttons/AddButton';\nimport SearchBar from '../../../components/styled-components/SearchBar';\n\nimport displayAlertError from '../../../helpers/Alert/errorAlert';\n\nconst AccountListPage = () => {\n  const { authAxios } = useContext(AxiosContext);\n  const navigation = useNavigation();\n  const [userList, setUserList] = useState([]);\n  const [searchedWord, setSearchedWord] = useState('');\n\n  useEffect(() => {\n    authAxios\n      .get('/api/users')\n      .then((response) => response.data)\n      .then((data) => {\n        if (searchedWord !== '') {\n          setUserList(\n            data.filter(\n              (e) =>\n                e.firstName.includes(searchedWord.toLowerCase()) ||\n                e.firstName.includes(searchedWord.toUpperCase()) ||\n                e.lastName.includes(searchedWord.toLowerCase()) ||\n                e.lastName.includes(searchedWord.toUpperCase()),\n            ),\n          );\n        } else {\n          setUserList(data);\n        }\n      })\n      .catch((err) => displayAlertError(err));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchedWord]);\n\n  return (\n    <Main>\n      <SearchBarWrapper>\n        <SearchBar value={searchedWord} setValue={setSearchedWord} />\n      </SearchBarWrapper>\n      <ListContainer>\n        <UserList elems={userList} />\n        <ButtonWrapper>\n          <AddButton\n            text=\"Ajouter un utilisateur\"\n            action={() => navigation.navigate('Cr√©ation utilisateur')}\n          />\n        </ButtonWrapper>\n      </ListContainer>\n    </Main>\n  );\n};\n\nconst Main = styled.SafeAreaView`\n  background: #eeeff5;\n  height: 100%;\n  display: flex;\n  width: 100%;\n  align-items: center;\n`;\nconst ButtonWrapper = styled.View`\n  align-self: center;\n  width: 70%;\n  margin-top: 5%;\n`;\nconst ListContainer = styled.View`\n  height: 70%;\n  width: 100%;\n  border-bottom-width: 1px;\n`;\nconst SearchBarWrapper = styled.View`\n  width: 80%;\n  margin: 5% 0;\n`;\n\nexport default AccountListPage;\n","import React from 'react';\nimport { Text } from 'react-native';\nimport styled from 'styled-components/native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst AccountInfos = ({ user }) => {\n  const { mail, firstName, lastName, role_id } = user;\n\n  const nameToDisplay = firstName + ' ' + lastName;\n  let roleName;\n\n  if (role_id) {\n    if (role_id === 1) {\n      roleName = 'Admin';\n    }\n  }\n\n  return (\n    <Main>\n      <IconContainer>\n        <Icon name=\"user\" size={120} color=\"#1f1300\" />\n      </IconContainer>\n      <InfoContainer>\n        <TextName>{mail}</TextName>\n        <Text>{nameToDisplay.toUpperCase()}</Text>\n        <Text>{roleName}</Text>\n      </InfoContainer>\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  display: flex;\n  align-items: center;\n  margin-top: 5%;\n  background: #eeeff5;\n`;\nconst IconContainer = styled.View`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 3px solid #1f1300;\n  border-radius: 100%;\n  width: 150px;\n  height: 150px;\n  background-color: #fdfdff;\n`;\nconst InfoContainer = styled.View`\n  margin-top: 2%;\n  display: flex;\n  align-items: center;\n`;\nconst TextName = styled.Text`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport default AccountInfos;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst ItemInfos = ({ title, link, autorisedRole }) => {\n  const navigation = useNavigation();\n\n  // const userHadAutorisation = () => {\n  //   let isAutorised = true;\n\n  //   if (autorisedRole) {\n  //     if (user.role_name.toLowerCase() !== autorisedRole.toLowerCase()) {\n  //       return (isAutorised = false);\n  //     }\n  //   }\n  //   return isAutorised;\n  // };\n\n  return (\n    <TouchableWrapper>\n      <Main onPress={() => navigation.navigate(link)}>\n        <Content>{title}</Content>\n        <Icon name=\"chevron-right\" size={25} color=\"#A8A39A\" />\n      </Main>\n    </TouchableWrapper>\n  );\n};\n\nconst Main = styled.TouchableOpacity`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px 0;\n`;\nconst Content = styled.Text`\n  font-size: 20px;\n`;\nconst TouchableWrapper = styled.View`\n  width: 90%;\n  border-bottom-width: 2px;\n  border-bottom-color: lightgrey;\n`;\n\nexport default ItemInfos;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\nimport ItemInfos from '../account/ItemInfos';\n\nconst ParameterList = ({ parameters }) => {\n  return (\n    <ListWrapper>\n      {parameters.length > 0\n        ? parameters.map((el, i) => (\n            <ItemInfos\n              key={i}\n              title={el.title}\n              link={el.link}\n              autorisedRole={el.autorisedRole}\n            />\n          ))\n        : null}\n    </ListWrapper>\n  );\n};\n\nconst ListWrapper = styled.View`\n  padding: 5% 0 5% 5%;\n  display: flex;\n  align-items: center;\n  border: 1px solid black;\n  width: 90%;\n  height: 50%;\n  align-self: center;\n  border-radius: 10px;\n  background: #fdfdff;\n  margin-top: 5%;\n`;\n\nexport default ParameterList;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst DeleteButton = ({ text, action, isActif }) => {\n  return (\n    <Button onPress={action}>\n      {text && <ButtonText>{text}</ButtonText>}\n      <Icon name=\"trash\" size={25} color=\"#ff4d42\" />\n    </Button>\n  );\n};\n\nconst Button = styled.TouchableOpacity`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  border: 1px solid #ff4d42;\n  padding: 20%;\n  background: #fdfdff;\n  border-radius: 5px;\n`;\nconst ButtonText = styled.Text`\n  font-size: 20px;\n  font-weight: 500;\n  color: #ff4d42;\n`;\n\nexport default DeleteButton;\n","export const PARAMETERS = [\n  {\n    id: 1,\n    title: 'Modifier le mot de passe',\n    link: 'Changement du mot de passe',\n  },\n  {\n    id: 2,\n    title: \"Modifier l'adresse mail\",\n    link: 'Changement du mail',\n  },\n];\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { Alert } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\n// import { deleteUser } from '../../../helpers/api/fetchApi';\nimport AccountInfos from '../../../components/account/AccountInfos';\nimport AccountParameterList from '../../../components/parameters/ParameterList';\nimport DeleteButton from '../../../components/styled-components/buttons/DeleteButton';\n\nimport { PARAMETERS } from '../../../app/datas/accountParametersList';\n\nconst AccountAdminView = ({ route }) => {\n  const navigation = useNavigation();\n  const { user } = route.params;\n\n  // const handleDeleteUser = async () => {\n  //   const response = await deleteUser(user.id);\n\n  //   const { errors, userDatas } = response;\n  //   if (errors) {\n  //     const { isDeleted } = errors;\n  //     showAlertInfo(isDeleted);\n  //   }\n  //   if (userDatas) {\n  //     const { isDeleted } = userDatas;\n  //     showAlertInfo(isDeleted);\n  //   }\n  // };\n\n  const showAlertInfo = (condition) => {\n    if (condition === true) {\n      return Alert.alert(\n        \"L'utilisateur a bien √©t√© supprim√© ‚úÖ\",\n        \"L'utilisateur a √©t√© supprim√© avec succ√®s.\",\n        [\n          {\n            text: 'Suivant',\n            onPress: () => navigation.navigate('Liste des utilisateurs'),\n            style: 'default',\n          },\n        ],\n      );\n    } else {\n      return Alert.alert(\n        'Utilisateur introuvable ‚ùå',\n        \"L'utilisateur a peut √™tre d√©j√† √©t√© supprim√©\",\n        [\n          {\n            text: 'Suivant',\n            onPress: () => navigation.navigate('Liste des utilisateurs'),\n            style: 'default',\n          },\n        ],\n      );\n    }\n  };\n\n  const deleteConfirmation = () => {\n    Alert.alert(\n      \"Suppression d'un utilisateur\",\n      'Vous √™tes sur le point de supprimer un utilisateur, voulez-vous continuer ?',\n      [\n        {\n          text: 'Annuler',\n          onPress: () => Alert.alert(\"L'utilisateur n'a pas √©t√© supprim√©\"),\n          style: 'cancel',\n        },\n        {\n          text: 'Continuer',\n          // onPress: () => handleDeleteUser(),\n        },\n      ],\n    );\n  };\n\n  return (\n    <Main>\n      <AccountInfos user={user} />\n      <AccountParameterList parameters={PARAMETERS} />\n      <ButtonContainer>\n        <DeleteButton text=\"Supprimer\" action={deleteConfirmation} />\n      </ButtonContainer>\n    </Main>\n  );\n};\n\nconst Main = styled.SafeAreaView`\n  background: #eeeff5;\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\nconst ButtonContainer = styled.View`\n  width: 50%;\n  margin-top: 10%;\n`;\n\nexport default AccountAdminView;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\nconst FirstButton = ({ text, action, isClickable, style }) => {\n  return (\n    <Button\n      isClickable={isClickable}\n      onPress={isClickable ? action : null}\n      activeOpacity={isClickable ? 0.2 : 1}\n      style={style}\n    >\n      <ButtonText isClickable={isClickable}>{text}</ButtonText>\n    </Button>\n  );\n};\n\nconst Button = styled.TouchableOpacity`\n  background: ${(props) =>\n    props.isClickable ? props.style.colorActive : props.style.colorInactive};\n  width: 100%;\n  height: 100%;\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 4px 5px 5px rgba(31, 19, 0, 0.5);\n`;\nconst ButtonText = styled.Text`\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => (props.isClickable ? '#EFEFEF' : '#1F1300')};\n`;\n\nexport default FirstButton;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\nimport { Alert, Text } from 'react-native';\n\nimport FirstButton from '../../../components/styled-components/buttons/FirstButton';\n\nconst UpdateMail = () => {\n  const [mail, setMail] = useState({\n    value: '',\n    isCorrect: true,\n  });\n  const [isEnterMail, setIsEnterMail] = useState(false);\n  // const [areTheSame, setAreTheSame] = useState(false);\n  const [newMail, setNewMail] = useState('');\n  const [newMailConfirmation, setNewMailConfirmation] = useState('');\n\n  const [isFocused, setIsFocused] = useState(false);\n  const marginForFocusedInput = isFocused ? 300 : 0;\n\n  useEffect(() => {\n    // c'est ici que l'on va tester si le mot de passe rentr√© est le bon\n    // il faut n√©anmoins s√©curiser la route histoire que n'importe qui ne puisse pas\n    // modifier n'importe quel mot de passe\n    if (isEnterMail) {\n      console.log('password is input');\n    } else {\n      console.log('no password input');\n    }\n  }, [isEnterMail]);\n\n  const showMailErrorAlert = () => {\n    Alert.alert(\n      'Mauvaise adresse mail',\n      \"L'adresse mail rentr√©e n'est pas la bonne, merci d'essayer √† nouveau\",\n      [\n        {\n          text: 'ok',\n          onPress: () => setMail({ ...mail, value: '' }),\n          style: 'destructive',\n        },\n      ],\n    );\n  };\n\n  const [areTheSame, setAreTheSame] = useState(false);\n  const testNewPassword = () => {\n    if (newMail === newMailConfirmation) {\n      setAreTheSame(true);\n    }\n  };\n\n  return (\n    <Main>\n      <Title>Changement d'adresse mail</Title>\n      <InputContainer>\n        <TextInput>Rentrez votre adresse mail actuelle :</TextInput>\n        <Input\n          value={mail.value}\n          keyboardType=\"email-address\"\n          onChangeText={(text) => setMail({ ...mail, value: text })}\n          clearButtonMode=\"while-editing\"\n          onEndEditing={() => {\n            setIsEnterMail(true);\n            !mail.isCorrect ? showMailErrorAlert() : null;\n          }}\n        />\n      </InputContainer>\n      <InputContainer>\n        <TextInput>Rentrez votre nouvelle adresse mail :</TextInput>\n        <Input\n          value={newMail}\n          keyboardType=\"email-address\"\n          onChangeText={setNewMail}\n          editable={mail.isCorrect}\n          clearButtonMode=\"while-editing\"\n        />\n      </InputContainer>\n      <InputContainer>\n        <TextInput>Confirmez votre nouvelle adresse mail :</TextInput>\n        <Input\n          value={newMailConfirmation}\n          keyboardType=\"email-address\"\n          onChangeText={setNewMailConfirmation}\n          style={{ marginBottom: marginForFocusedInput }}\n          onFocus={() => setIsFocused(true)}\n          onEndEditing={() => {\n            setIsFocused(false);\n            testNewPassword();\n          }}\n          editable={mail.isCorrect}\n          clearButtonMode=\"while-editing\"\n        />\n      </InputContainer>\n      <ButtonContainer>\n        <FirstButton text=\"Changer\" isClickable={true} style={style.button} />\n      </ButtonContainer>\n      {newMail && newMailConfirmation && !areTheSame ? (\n        <Text>Les adresses ne concordent pas</Text>\n      ) : null}\n    </Main>\n  );\n};\n\nconst style = {\n  button: {\n    colorActive: '#083D77',\n    colorInactive: '#EFEFEF',\n  },\n};\n\nconst Main = styled.View`\n  height: 100%;\n  background: #eeeff5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst InputContainer = styled.View`\n  width: 70%;\n  margin-bottom: 6%;\n`;\nconst Input = styled.TextInput`\n  font-size: 20px;\n  padding: 10px;\n  background: #fdfdff;\n  border: 2px solid black;\n  margin-top: 10px;\n`;\nconst TextInput = styled.Text`\n  font-size: 18px;\n  font-weight: 600;\n`;\nconst Title = styled.Text`\n  font-size: 25px;\n  font-weight: 700;\n  margin-bottom: 20%;\n  width: 60%;\n  text-align: center;\n`;\nconst ButtonContainer = styled.View`\n  width: 30%;\n  height: 8%;\n`;\n\nexport default UpdateMail;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components/native';\nimport { Alert, Text } from 'react-native';\n\nimport FirstButton from '../../../components/styled-components/buttons/FirstButton';\n\nconst UpdatePassword = () => {\n  const [password, setPassword] = useState({\n    value: '',\n    isCorrect: true,\n  });\n  const [isEnterPass, setIsEnterPass] = useState(false);\n  // const [areTheSame, setAreTheSame] = useState(false);\n  const [newPassword, setNewPassword] = useState('');\n  const [newPasswordConfirmation, setNewPasswordConfirmation] = useState('');\n\n  const [isFocused, setIsFocused] = useState(false);\n  const marginForFocusedInput = isFocused ? 300 : 0;\n\n  useEffect(() => {\n    // c'est ici que l'on va tester si le mot de passe rentr√© est le bon\n    // il faut n√©anmoins s√©curiser la route histoire que n'importe qui ne puisse pas\n    // modifier n'importe quel mot de passe\n    if (isEnterPass) {\n      console.log('password is input');\n    } else {\n      console.log('no password input');\n    }\n  }, [isEnterPass]);\n\n  const showPassErrorAlert = () => {\n    Alert.alert(\n      'Mauvais mot de passe',\n      \"Le mot de passe rentr√© n'est pas bon, merci de le saisir √† nouveau\",\n      [\n        {\n          text: 'ok',\n          onPress: () => setPassword({ ...password, value: '' }),\n          style: 'destructive',\n        },\n      ],\n    );\n  };\n\n  const [areTheSame, setAreTheSame] = useState(false);\n  const testNewPassword = () => {\n    if (newPassword === newPasswordConfirmation) {\n      setAreTheSame(true);\n    }\n  };\n\n  return (\n    <Main>\n      <Title>Changement de mot de passe</Title>\n      <InputContainer>\n        <TextInput>Rentrez votre mot de passe :</TextInput>\n        <Input\n          value={password.value}\n          onChangeText={(text) => setPassword({ ...password, value: text })}\n          secureTextEntry={true}\n          clearButtonMode=\"while-editing\"\n          onEndEditing={() => {\n            setIsEnterPass(true);\n            !password.isCorrect ? showPassErrorAlert() : null;\n          }}\n        />\n      </InputContainer>\n      <InputContainer>\n        <TextInput>Rentrez votre nouveau mot de passe :</TextInput>\n        <Input\n          value={newPassword}\n          onChangeText={setNewPassword}\n          editable={password.isCorrect}\n          clearButtonMode=\"while-editing\"\n        />\n      </InputContainer>\n      <InputContainer>\n        <TextInput>Rentrez votre nouveau mot de passe :</TextInput>\n        <Input\n          value={newPasswordConfirmation}\n          onChangeText={setNewPasswordConfirmation}\n          style={{ marginBottom: marginForFocusedInput }}\n          onFocus={() => setIsFocused(true)}\n          onEndEditing={() => {\n            setIsFocused(false);\n            testNewPassword();\n          }}\n          editable={password.isCorrect}\n          clearButtonMode=\"while-editing\"\n        />\n      </InputContainer>\n      <ButtonContainer>\n        <FirstButton text=\"Changer\" isClickable={true} style={style.button} />\n      </ButtonContainer>\n      {newPassword && newPasswordConfirmation && !areTheSame ? (\n        <Text>Les mots de passes ne concordent pas</Text>\n      ) : null}\n    </Main>\n  );\n};\n\nconst style = {\n  button: {\n    colorActive: '#083D77',\n    colorInactive: '#EFEFEF',\n  },\n};\n\nconst Main = styled.View`\n  height: 100%;\n  background: #eeeff5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst InputContainer = styled.View`\n  width: 70%;\n  margin-bottom: 6%;\n`;\nconst Input = styled.TextInput`\n  font-size: 20px;\n  padding: 10px;\n  background: #fdfdff;\n  border: 2px solid black;\n  margin-top: 10px;\n`;\nconst TextInput = styled.Text`\n  font-size: 18px;\n  font-weight: 600;\n`;\nconst Title = styled.Text`\n  font-size: 25px;\n  font-weight: 700;\n  margin-bottom: 20%;\n  width: 60%;\n  text-align: center;\n`;\nconst ButtonContainer = styled.View`\n  width: 30%;\n  height: 8%;\n`;\n\nexport default UpdatePassword;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { Picker } from '@react-native-picker/picker';\n\nconst UserCreation = ({ newUser, setNewUser }) => {\n  const { lastName, firstName, mail, role_id } = newUser;\n\n  return (\n    <Main>\n      <InputContainer>\n        <Input\n          clearButtonMode=\"while-editing\"\n          autoCorrect={false}\n          placeholder=\"Nom\"\n          autoCapitalize=\"words\"\n          placeholderTextColor=\"#1f1300\"\n          value={lastName}\n          onChangeText={(input) => setNewUser({ ...newUser, lastName: input })}\n        />\n      </InputContainer>\n      <InputContainer>\n        <Input\n          clearButtonMode=\"while-editing\"\n          autoCorrect={false}\n          placeholder=\"Pr√©nom\"\n          autoCapitalize=\"words\"\n          placeholderTextColor=\"#1f1300\"\n          value={firstName}\n          onChangeText={(input) => setNewUser({ ...newUser, firstName: input })}\n        />\n      </InputContainer>\n      <InputContainer>\n        <Input\n          clearButtonMode=\"while-editing\"\n          autoCorrect={false}\n          placeholder=\"Mail\"\n          keyboardType=\"email-address\"\n          autoCapitalize=\"none\"\n          placeholderTextColor=\"#1f1300\"\n          value={mail}\n          onChangeText={(input) => setNewUser({ ...newUser, mail: input })}\n        />\n      </InputContainer>\n      <SelectWrapper>\n        <TitleWrapper>Role de l'utilisateur</TitleWrapper>\n        <Picker\n          numberOfLines={2}\n          selectedValue={role_id}\n          onValueChange={(itemValue, itemIndex) =>\n            setNewUser({ ...newUser, role_id: itemValue })\n          }\n        >\n          <Picker.Item label=\"S√©lectionnez un role\" value={null} />\n          <Picker.Item label=\"Admin\" value={1} />\n          <Picker.Item label=\"Commercial\" value={2} />\n          <Picker.Item label=\"consultant\" value={3} />\n        </Picker>\n      </SelectWrapper>\n    </Main>\n  );\n};\n\nconst Main = styled.View`\n  background: #fdfdff;\n  width: 100%;\n  height: 100%;\n  border: 1px solid #1f1300;\n  border-radius: 30px;\n  padding: 20px;\n`;\nconst InputContainer = styled.View`\n  border-bottom-width: 1px;\n  border-bottom-color: #8c8787;\n  height: 12%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\nconst Input = styled.TextInput`\n  font-size: 18px;\n  height: 70%;\n  width: 100%;\n`;\n\nconst TitleWrapper = styled.Text`\n  font-size: 22px;\n  text-align: center;\n`;\nconst SelectWrapper = styled.View`\n  margin-top: 10%;\n  padding: 0 10%;\n`;\n\nexport default UserCreation;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components/native';\nimport { Platform, Alert } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport UserCreation from '../../../components/user/UserCreation';\nimport FirstButton from '../../../components/styled-components/buttons/FirstButton';\n\nconst CreateAccount = () => {\n  const navigation = useNavigation();\n  const [newUser, setNewUser] = useState({\n    mail: null,\n    firstName: null,\n    password: null,\n    lastName: null,\n    role_id: null,\n  });\n  const [isClickable, setIsClickable] = useState(false);\n\n  useEffect(() => {\n    const handleButtonStatus = () => {\n      if (\n        (newUser.firstName &&\n          newUser.lastName &&\n          newUser.mail &&\n          newUser.role_id) !== null\n      ) {\n        setIsClickable(true);\n      } else {\n        setIsClickable(false);\n      }\n    };\n    handleButtonStatus();\n  }, [newUser.firstName, newUser.lastName, newUser.mail, newUser.role_id]);\n\n  // const handleCreateUser = async () => {\n  //   const response = await createUser(newUser);\n\n  //   const { errors, userDatas } = response;\n  //   if (errors) {\n  //     const { isCreated } = errors;\n  //     showAlertInfo(isCreated);\n  //   }\n  //   if (userDatas) {\n  //     const { isCreated } = userDatas;\n  //     showAlertInfo(isCreated);\n  //   }\n  // };\n\n  const showAlertInfo = (condition) => {\n    if (condition === true) {\n      return Alert.alert(\n        \"L'utilisateur a bien √©t√© cr√©√© ‚úÖ\",\n        \"L'utilisateur a √©t√© cr√©√© avec succ√®s, un mail avec ses indentifiants de connexion vient de lui √™tre envoy√©\",\n        [\n          {\n            text: 'Suivant',\n            onPress: () => navigation.navigate('Liste des utilisateurs'),\n            style: 'default',\n          },\n        ],\n      );\n    } else {\n      return Alert.alert(\n        'Le mail est d√©j√† utilis√© ‚ùå',\n        \"Merci d'essayer √† nouveau avec un mail qui n'est pas encore utilis√©\",\n        [\n          {\n            text: 'Cancel',\n            onPress: () => setNewUser({ ...newUser, mail: null }),\n            style: 'default',\n          },\n        ],\n      );\n    }\n  };\n\n  return (\n    <Main behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n      <FormContainer>\n        <UserCreation newUser={newUser} setNewUser={setNewUser} />\n      </FormContainer>\n      <ButtonContainer>\n        <FirstButton\n          text=\"Cr√©er\"\n          isClickable={isClickable}\n          // action={handleCreateUser}\n        />\n      </ButtonContainer>\n    </Main>\n  );\n};\n\nconst Main = styled.KeyboardAvoidingView`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  background: #eeeff5;\n`;\nconst FormContainer = styled.View`\n  width: 80%;\n  height: 70%;\n`;\nconst ButtonContainer = styled.View`\n  margin-top: 10%;\n  width: 50%;\n  height: 8%;\n`;\n\nexport default CreateAccount;\n","// besoin d'un lien, titre, logo\nimport React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport styled from 'styled-components/native';\n\nconst FastAction = ({ title, link, logo }) => {\n  const navigation = useNavigation();\n\n  return (\n    <MainContainer\n      activeOpacity={0.6}\n      onPress={() => {\n        navigation.navigate(link);\n      }}\n    >\n      <IconContainer>\n        <Icon name={logo} size={30} color=\"rgba(8, 61, 119, 1)\" />\n      </IconContainer>\n      <Title>{title}</Title>\n    </MainContainer>\n  );\n};\n\nconst MainContainer = styled.TouchableOpacity`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background: #fdfdff;\n  padding: 10px;\n  margin-bottom: 5%;\n  border: 1px solid rgba(8, 61, 119, 1);\n  border-radius: 10px;\n`;\nconst IconContainer = styled.View`\n  width: 20%;\n  border: 1px solid rgba(8, 61, 119, 1);\n  padding: 2%;\n  display: flex;\n  align-items: center;\n  margin-bottom: 2%;\n  border-radius: 10px;\n`;\nconst Title = styled.Text`\n  font-size: 18px;\n  margin-left: 5%;\n`;\n\nexport default FastAction;\n","import React from 'react';\nimport FastAction from './FastAction';\n\nimport styled from 'styled-components/native';\n\nconst FastActionList = () => {\n  return (\n    <MainContainer>\n      <FastAction\n        title=\"Liste des devis\"\n        logo=\"th-list\"\n        link=\"Liste des devis\"\n      />\n      <FastAction title=\"Faire un devis\" logo=\"plus\" link=\"Cr√©ation de devis\" />\n    </MainContainer>\n  );\n};\n\nconst MainContainer = styled.View`\n  width: 90%;\n  display: flex;\n`;\n\nexport default FastActionList;\n","import React, { useContext, useEffect } from 'react';\nimport styled from 'styled-components/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { AxiosContext } from '../../context/AxiosContext';\nimport { UserContext } from '../../context/UserContext';\n\n// import des composants\nimport FastActionList from '../../components/fastActionHome/FastActionList';\n\nconst Home = () => {\n  const { authAxios } = useContext(AxiosContext);\n  const { user, setUser } = useContext(UserContext);\n\n  const checkConnectedUser = async () => {\n    try {\n      const value = await AsyncStorage.getItem('@storage_Key');\n      const data = JSON.parse(value);\n\n      const userConnected = await authAxios.get(`/api/users/${data.user_id}`);\n      setUser({\n        ...user,\n        ...userConnected.data,\n      });\n    } catch (error) {\n      await AsyncStorage.removeItem('@storage_Key');\n    }\n  };\n\n  useEffect(() => {\n    checkConnectedUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <HomeContainer>\n      <FastActionContainer>\n        <Subtitle>Actions rapides</Subtitle>\n        <FastActionList />\n      </FastActionContainer>\n    </HomeContainer>\n  );\n};\n\nconst HomeContainer = styled.SafeAreaView`\n  backgroundcolor: '#EEEFF5';\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FastActionContainer = styled.View`\n  height: 60%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Subtitle = styled.Text`\n  align-self: flex-start;\n  font-size: 18px;\n  font-weight: 600;\n  margin: 2% 2%;\n`;\n\nexport default Home;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components/native';\n\nimport AccountInfos from '../../../components/account/AccountInfos';\nimport AccountParameterList from '../../../components/parameters/ParameterList';\nimport { UserContext } from '../../../context/UserContext';\n\nimport { PARAMETERS } from '../../../app/datas/accountParametersList';\n\nconst Account = () => {\n  const { user } = useContext(UserContext);\n\n  return (\n    <Main>\n      <AccountInfos user={user} />\n      <AccountParameterList parameters={PARAMETERS} />\n    </Main>\n  );\n};\n\nconst Main = styled.SafeAreaView`\n  background: #eeeff5;\n  height: 100%;\n`;\n\nexport default Account;\n","import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n// import Account from '../admin/Account/Account';\nimport Account from '../screens/admin/Account/Account';\n\nconst AccountStack = createNativeStackNavigator();\n\nconst AccountStackScreen = () => {\n  return (\n    <AccountStack.Navigator screenOptions={{ headerShown: false }}>\n      <AccountStack.Screen name=\"accountStack\" component={Account} />\n    </AccountStack.Navigator>\n  );\n};\n\nexport default AccountStackScreen;\n","import React from 'react';\nimport styled from 'styled-components/native';\n\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\nconst LogoutButton = ({ onPress }) => {\n  return (\n    <Button onPress={onPress}>\n      <ButtonText>D√©connexion</ButtonText>\n      <Icon name=\"logout\" size={20} />\n    </Button>\n  );\n};\n\nconst Button = styled.TouchableOpacity`\n  background: #fdfdff;\n  padding: 15px;\n  border-radius: 30px;\n  margin-top: 5%;\n  width: 50%;\n  border: solid 1px black;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\nconst ButtonText = styled.Text`\n  font-size: 18px;\n  margin-right: 10px;\n  font-weight: 600;\n`;\n\nexport default LogoutButton;\n","export const PARAMETERS = [\n  {\n    id: 1,\n    title: 'Param√®tres des utilisateurs',\n    link: 'Liste des utilisateurs',\n    autorisedRole: 'admin',\n  },\n];\n","import React, { useContext } from 'react';\nimport styled from 'styled-components/native';\n\nimport ParameterList from '../../../components/parameters/ParameterList';\nimport LogoutButton from '../../../components/styled-components/buttons/LogoutButton';\nimport displayAlertError from '../../../helpers/Alert/errorAlert';\nimport { PARAMETERS } from '../../../app/datas/parametersList';\nimport { AuthContext } from '../../../context/AuthContext';\n\nconst Paramaters = () => {\n  const authContext = useContext(AuthContext);\n\n  const handleDeconnectUser = async () => {\n    try {\n      authContext.logout();\n    } catch (error) {\n      displayAlertError(error);\n    }\n  };\n  return (\n    <Main>\n      <Title>Param√®tres de l'application</Title>\n      <ParameterList parameters={PARAMETERS} />\n      <LogoutButton onPress={handleDeconnectUser} />\n    </Main>\n  );\n};\n\nconst Main = styled.SafeAreaView`\n  background: #eeeff5;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Title = styled.Text`\n  font-size: 25px;\n  font-weight: 600;\n  margin-bottom: 30%;\n`;\n\nexport default Paramaters;\n","import React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n// import des pages\nimport Parameters from '../screens/admin/parameters/Parameters';\n\nconst ParamatersStack = createNativeStackNavigator();\n\nconst ParametersStackScreen = () => {\n  return (\n    <ParamatersStack.Navigator screenOptions={{ headerShown: false }}>\n      <ParamatersStack.Screen name=\"parametersStack\" component={Parameters} />\n    </ParamatersStack.Navigator>\n  );\n};\n\nexport default ParametersStackScreen;\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport Home from '../../screens/admin/Home';\nimport AccountStackScreen from '../../helpers/AccountStackScreen';\nimport ParametersStackScreen from '../../helpers/ParametersStackScreen';\n\nconst Tab = createBottomTabNavigator();\n\nconst BottomNavbar = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        headerShown: true,\n        headerStyle: {\n          backgroundColor: '#083D77',\n        },\n        headerTintColor: '#EFEFEF',\n        // eslint-disable-next-line react/no-unstable-nested-components\n        tabBarIcon: ({ color, size }) => {\n          const iconName = {\n            Accueil: 'home',\n            Notifications: 'bell',\n            Compte: 'user',\n            Param√®tres: 'gear',\n          };\n          return <Icon name={iconName[route.name]} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#EFEFEF',\n        tabBarStyle: {\n          backgroundColor: '#083D77',\n          paddingTop: 10,\n        },\n        tabBarInactiveTintColor: '#486381',\n      })}\n    >\n      <Tab.Screen\n        name=\"Accueil\"\n        component={Home}\n        options={{\n          title: 'App Devis',\n          tabBarLabel: 'Accueil',\n        }}\n      />\n      <Tab.Screen name=\"Compte\" component={AccountStackScreen} />\n      <Tab.Screen name=\"Param√®tres\" component={ParametersStackScreen} />\n    </Tab.Navigator>\n  );\n};\n\nexport default BottomNavbar;\n","import React, { useContext, useEffect } from 'react';\nimport { StatusBar } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n// import de la page de connexion\nimport LoginStackScreen from './helpers/LoginStackScreen';\n\n// import des diff√©rentes stack de navigation\n// Pages situ√©es sur l'accueil de l'application\nimport EstimateCreation from './screens/admin/estimates/EstimateCreation';\nimport EstimateList from './screens/admin/estimates/EstimateList';\n\n// Pages de gestion des diff√©rents param√®tres\nimport AccountListPage from './screens/admin/parameters/AccountListPage';\nimport AccountAdminView from './screens/admin/parameters/AccountAdminView';\nimport UpdateMail from './screens/admin/Account/UpdateMail';\nimport UpdatePassword from './screens/admin/Account/UpdatePassword';\n\n// Pages de cr√©ation de contenu\nimport CreateAccount from './screens/admin/Account/CreateAccount';\n\n// context\nimport { AuthContext } from './context/AuthContext';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport BottomNavBar from './components/navBar/BottomNavbar';\n\nconst Stack = createNativeStackNavigator();\n\nconst AppContainer = () => {\n  const authContext = useContext(AuthContext);\n\n  const checkConnection = async () => {\n    try {\n      const value = await AsyncStorage.getItem('@storage_Key');\n      const jwt = JSON.parse(value);\n\n      authContext.setAuthState({\n        accessToken: jwt.accessToken || null,\n        refreshToken: jwt.refreshToken || null,\n        authenticated: jwt.accessToken !== null,\n      });\n    } catch (error) {\n      authContext.setAuthState({\n        accessToken: null,\n        refreshToken: null,\n        authenticated: false,\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (!authContext.authState.authenticated) {\n      checkConnection();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <NavigationContainer>\n      <StatusBar barStyle=\"light-content\" />\n      {authContext.authState.authenticated ? (\n        <Stack.Navigator\n          screenOptions={{\n            headerShown: false,\n            headerStyle: {\n              backgroundColor: '#083D77',\n            },\n            headerTintColor: '#EFEFEF',\n          }}\n        >\n          <Stack.Screen name=\"App devis\" component={BottomNavBar} />\n          <Stack.Screen\n            name=\"Cr√©ation de devis\"\n            component={EstimateCreation}\n            options={{\n              headerShown: true,\n            }}\n          />\n          <Stack.Screen\n            name=\"Liste des devis\"\n            component={EstimateList}\n            options={{\n              headerShown: true,\n            }}\n          />\n\n          <Stack.Screen\n            name=\"Liste des utilisateurs\"\n            component={AccountListPage}\n            options={{ headerShown: true }}\n          />\n          <Stack.Screen\n            name=\"Utilisateur admin view\"\n            component={AccountAdminView}\n            options={{ headerShown: true, title: '' }}\n          />\n          <Stack.Screen\n            name=\"Changement du mail\"\n            component={UpdateMail}\n            options={{\n              headerShown: true,\n              title: '',\n            }}\n          />\n          <Stack.Screen\n            name=\"Changement du mot de passe\"\n            component={UpdatePassword}\n            options={{\n              headerShown: true,\n              title: '',\n            }}\n          />\n          <Stack.Screen\n            name=\"Cr√©ation utilisateur\"\n            component={CreateAccount}\n            options={{\n              headerShown: true,\n              title: '',\n            }}\n          />\n        </Stack.Navigator>\n      ) : (\n        <LoginStackScreen />\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default AppContainer;\n","import React from 'react';\nimport AppContainer from './AppContainer';\n\n// import different context\nimport { AuthProvider } from './context/AuthContext';\nimport { UserProvider } from './context/UserContext';\nimport { AxiosProvider } from './context/AxiosContext';\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <UserProvider>\n        <AxiosProvider>\n          <AppContainer />\n        </AxiosProvider>\n      </UserProvider>\n    </AuthProvider>\n  );\n}\n"],"sourceRoot":""}